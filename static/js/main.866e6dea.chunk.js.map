{"version":3,"sources":["config.ts","hooks/useApiState.tsx","contexts/FoodContext.tsx","contexts/AuthContext.tsx","ui/atoms/LoadingButton/LoadingButton.tsx","ui/organisms/Login/Login.tsx","ui/organisms/Register/Register.tsx","ui/pages/LandingPage/LandingPage.tsx","ui/atoms/MacroNumbers/MacroNumbers.tsx","ui/molecules/SliderWithInput/SliderWithInput.tsx","ui/organisms/MacroCounter/MacroCounter.tsx","ui/pages/Dashboard/Dashboard.tsx","ui/pages/Profile/Profile.tsx","ui/PrivateRoute.tsx","hooks/useDarkMode.tsx","theme.tsx","contexts/ThemeContext.tsx","ui/organisms/TopAppBar/TopAppBar.tsx","ui/organisms/Navbar/Navbar.tsx","types.ts","ui/atoms/FoodIcon/FoodIcon.tsx","ui/molecules/ListItemFoodIcon/ListItemFoodIcon.tsx","ui/molecules/ListItemFood/ListItemFood.tsx","ui/organisms/ListFood/ListFood.tsx","ui/organisms/ListFoodWIthCheckbox/ListFoodWithCheckbox.tsx","ui/organisms/EditFood/EditFood.tsx","ui/pages/FoodPage/FoodPage.tsx","ui/atoms/LoadingAnimation/LoadingAnimation.tsx","ui/pages/Error404/Error404.tsx","ui/organisms/ListIntake/ListIntake.tsx","ui/pages/Intake/Intake.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_ADDRESS","useApiState","useState","loading","setLoading","error","setError","PublicFoodContext","React","createContext","publicFood","personalFood","loadPublicFood","loadPersonalFood","createPersonalFood","removePersonalFood","editPersonalFood","getFoodById","useFood","useContext","FoodProvider","children","setPublicFood","setPersonalFood","value","currentUser","axios","method","url","headers","Authorization","token","then","res","data","console","log","catch","err","response","message","id","i","length","prevState","foodId","filter","item","Provider","initialUserInfo","username","name","permissions","AuthContext","isAuthenticated","register","login","logout","useAuth","AuthProvider","useHistory","setCurrentUser","setIsAuthenticated","gotValidToken","localStorage","getItem","Date","getTime","parseInt","jwt_decode","exp","checkIfTokenValid","firstName","lastName","clear","profile","useEffect","toggleAction","setItem","removeItem","LoadingButton","rest","Button","size","color","LoginSchema","Yup","shape","required","password","Login","to","initialValues","validationSchema","onSubmit","values","setSubmitting","submitForm","isSubmitting","errors","Box","margin","type","label","component","TextField","variant","disabled","onClick","Link","RegisterSchema","min","max","email","confirmPassword","oneOf","Register","LandingPage","action","setAction","prevAction","MacroNumbers","carbs","fat","protein","Chip","useStyles","makeStyles","root","width","input","SliderWithInput","setValue","classes","className","Typography","gutterBottom","Grid","container","spacing","alignItems","xs","Slider","onChange","_","newValue","aria-labelledby","Input","event","target","Number","onBlur","inputProps","step","MacroCounter","carbsPercent","setCarbsPercent","fatPercent","setFatPercent","proteinPercent","setProteinPercent","totalCalories","setTotalCalories","macros","setMacros","percentTotal","prevMacros","Math","round","calculateMacros","Dashboard","Profile","PrivateRoute","render","pathname","useDarkMode","darkMode","setDarkMode","toggleDarkMode","prevMode","lightTheme","createMuiTheme","palette","darkTheme","ThemeUpdateContext","ThemeProvider","useTheme","theme","menuButton","marginRight","edge","title","filler","flexGrow","icon","height","switchToggle","TopAppBar","toggleTheme","handleLogoClick","handleProfileClick","handleFoodClick","handleIntakeClick","AppBar","position","Toolbar","IconButton","Switch","checked","Navbar","history","push","foodTypes","FoodIcon","foodType","ListItemFoodIcon","ListItemIcon","Icon","fontSize","createStyles","listItem","backgroundColor","background","paper","kcal","ListItemFood","food","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","ListFood","foodArray","List","map","index","Divider","listItemWrapper","display","flex","ListFoodWithCheckbox","setChecked","single","Checkbox","includes","e","c","handleChange","EditFood","handleEditToggle","undefined","FoodSchema","resetForm","setFieldValue","Select","MenuItem","positive","optional","FoodPage","create","setCreate","edit","setEdit","editFood","setEditFood","currentFood","setCurrentFood","concat","LoadingAnimation","style","minHeight","justifyContent","Error404","ListIntake","Intake","formatDate","dateString","format","parse","intake","setIntake","totalKcal","setTotalKcal","now","date","setDate","addFood","setAddFood","counter","forEach","intakeEle","calcTotal","foundFood","intakeFood","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","CssBaseline","document","getElementById"],"mappings":"iPAAaA,EAAc,wC,kCCSpB,SAASC,IAA0B,IAAD,EACTC,oBAAS,GADA,mBAChCC,EADgC,KACvBC,EADuB,OAEbF,mBAAiB,IAFJ,mBAIvC,MAAO,CAAEC,UAASE,MAJqB,KAIdD,aAAYE,SAJE,M,WCsBnCC,EAAoBC,IAAMC,cAAkC,CAChEC,WAAY,GACZC,aAAc,GACdC,eAAgB,aAGhBC,iBAAkB,aAGlBC,mBAAoB,aAGpBC,mBAAoB,aAGpBC,iBAAkB,aAGlBC,YAAa,kBAAM,MACnBd,SAAS,IAGJ,SAASe,IACd,OAAOC,qBAAWZ,GAGpB,IAqHea,EArHM,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAA+C,EACjCnB,mBAAiB,IADgB,mBAC9DQ,EAD8D,KAClDY,EADkD,OAE7BpB,mBAAiB,IAFY,mBAE9DS,EAF8D,KAEhDY,EAFgD,OAGpBtB,IAAzCE,EAH6D,EAG7DA,QAAgBC,GAH6C,EAGpDC,MAHoD,EAG7CD,YAAYE,EAHiC,EAGjCA,SAmGpC,IAAMkB,EAAQ,CACZd,WAAYA,EACZC,aAAcA,EACdC,eApGF,SAAwBa,GACtBrB,GAAW,GACXsB,IAAM,CAAEC,OAAQ,MAAOC,IAAI,GAAD,OAAK5B,EAAL,iBAAiC6B,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UACxGC,MAAK,SAACC,GACLX,EAAcW,EAAIC,MAClBC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,OAuFzBS,iBApFF,SAA0BY,GACxBrB,GAAW,GACXsB,IAAM,CAAEC,OAAQ,MAAOC,IAAI,GAAD,OAAK5B,EAAL,mBAAmC6B,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UAC1GC,MAAK,SAACC,GACLV,EAAgBU,EAAIC,MACpBC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,OAuEzBa,YApEF,SAAqBwB,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAWiC,OAAQD,IACrC,GAAIhC,EAAWgC,GAAGD,IAAMA,EAAI,OAAO/B,EAAWgC,GAGhD,IAAK,IAAIA,EAAI,EAAGA,EAAI/B,EAAagC,OAAQD,IACvC,GAAI/B,EAAa+B,GAAGD,IAAMA,EAAI,OAAO9B,EAAa+B,GAGpD,OAAO,MA4DPvC,QAASA,EACTW,mBA1DF,SAA4BoB,EAA0BT,GACpDrB,GAAW,GACXsB,IAAM,CAAEC,OAAQ,OAAQC,IAAI,GAAD,OAAK5B,EAAL,mBAAmCkC,OAAML,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UACjHC,MAAK,SAACC,GACLV,GAAgB,SAACqB,GAAD,4BAAmBA,GAAnB,CAA8BX,EAAIC,aAEnDG,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,OA8CzBW,mBA3CF,SAA4B8B,EAAgBpB,GAC1CrB,GAAW,GACXsB,IAAM,CACJC,OAAQ,SACRC,IAAI,GAAD,OAAK5B,EAAL,2BAAmC6C,GACtChB,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UAE/CC,MAAK,SAACC,GAAD,OAASV,GAAgB,SAACqB,GAAD,OAAeA,EAAUE,QAAO,SAACC,GAAD,OAAUA,EAAKN,IAAMI,WACnFR,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,OA6BzBY,iBA1BF,SAA0BkB,EAAYT,GACpCU,QAAQC,IAAIF,GACZ9B,GAAW,GACXsB,IAAM,CAAEC,OAAQ,MAAOC,IAAI,GAAD,OAAK5B,EAAL,mBAAmCkC,OAAML,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UAChHC,MAAK,SAACC,GACLV,GAAgB,SAACqB,GAAD,4BAAmBA,EAAUE,QAAO,SAACC,GAAD,OAAUA,EAAKN,IAAMP,EAAKO,OAA9D,CAAmEP,UAEpFG,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,QAe3B,OAAO,cAACG,EAAkByC,SAAnB,CAA4BxB,MAAOA,EAAnC,SAA2CH,KCvI9C4B,EAAkB,CACtBC,SAAU,GACVC,KAAM,GACNV,GAAI,GACJW,YAAa,GACbrB,MAAO,IAaHsB,EAAc7C,IAAMC,cAA4B,CACpD6C,gBAAiB,KACjB7B,YAAawB,EACb9C,SAAS,EACTE,MAAO,GACPkD,SAAU,aAGVC,MAAO,aAGPC,OAAQ,eAKH,SAASC,IACd,OAAOvC,qBAAWkC,GAGpB,IAsIeM,EAtIM,SAAC,GAAkD,IAAhDtC,EAA+C,EAA/CA,SAA+C,GACrDuC,cACsB1D,mBAAgB+C,IAFe,mBAE9DxB,EAF8D,KAEjDoC,EAFiD,OAGvB3D,mBAAyB,MAHF,mBAG9DoD,EAH8D,KAG7CQ,EAH6C,OAI3C5D,mBAAS,IAJkC,mBAI9DG,EAJ8D,KAIvDC,EAJuD,OAKvCJ,oBAAS,GAL8B,mBAK9DC,EAL8D,KAKrDC,EALqD,OAMxBc,IAArCN,EAN6D,EAM7DA,eAAgBC,EAN6C,EAM7CA,iBA+FxB,SAASkD,IACP,IAAMhC,EAAQiC,aAAaC,QAAQ,SAC/BlC,GAPN,SAA2BA,GACzB,SAAI,IAAImC,MAAOC,UAAY,IAAOC,SAASC,YAAqDtC,GAAOuC,MAM1FC,CAAkBxC,GAnCjC,SAAiBA,GACf3B,GAAW,GACXsB,IAAM,CAAEC,OAAQ,MAAOC,IAAI,GAAD,OAAK5B,EAAL,YAA4B6B,QAAS,CAAEC,cAAc,UAAD,OAAYC,MACvFC,MAAK,SAACC,GAAS,IAAD,EAC8CA,EAAIC,KAAvDsC,EADK,EACLA,UAAWC,EADN,EACMA,SAAUhC,EADhB,EACgBA,GAAIW,EADpB,EACoBA,YAAaF,EADjC,EACiCA,SAC9CW,EAAe,CACbpB,GAAIA,EACJU,KAAMqB,EAAY,IAAMC,EACxBvB,SAAUA,EACVE,YAAaA,EACbrB,MAAOA,IAET+B,GAAmB,MAEpBzB,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,0BAEX0D,aAAaU,QACbZ,GAAmB,MAEpB9B,MAAK,WACJ5B,GAAW,MAYbuE,CAAQ5C,GAER+B,GAAmB,GAIvBc,qBAAU,WACRb,MACC,IAEHa,qBAAU,WACJtB,IACFzC,EAAiBY,GACjBb,EAAea,MAEhB,CAAC6B,IAEJ,IAAM9B,EAAQ,CACZ8B,gBAAiBA,EACjB7B,YAAaA,EACbtB,QAASA,EACTE,MAAOA,EACPkD,SAtHF,SAAkBrB,GAChB9B,GAAW,GACXsB,IAAM,CAAEC,OAAQ,OAAQC,IAAI,GAAD,OAAK5B,EAAL,aAA6BkC,KAAMA,IAC3DF,MAAK,SAACC,GACL7B,GAAW,GACX8B,EAAK2C,kBAENxC,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,0BAEXF,GAAW,OA0GfoD,MAvGF,SAAetB,GACb9B,GAAW,GACXsB,IAAM,CAAEC,OAAQ,OAAQC,IAAI,GAAD,OAAK5B,EAAL,iBAAiCkC,KAAMA,IAC/DF,MAAK,SAACC,GAAS,IAAD,EACsCA,EAAIC,KAA/CO,EADK,EACLA,GAAIU,EADC,EACDA,KAAMC,EADL,EACKA,YAAarB,EADlB,EACkBA,MAAOmB,EADzB,EACyBA,SACtCc,aAAac,QAAQ,QAAS/C,GAC9B8B,EAAe,CACbpB,GAAIA,EACJU,KAAMA,EACNC,YAAaA,EACbrB,MAAOA,EACPmB,SAAUA,IAEZY,GAAmB,MAEpBzB,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,2BAEXwD,GAAmB,MAEpB9B,MAAK,WACJ5B,GAAW,OAgFfqD,OA7EF,WACErD,GAAW,GACXsB,IAAM,CAAEC,OAAQ,SAAUC,IAAI,GAAD,OAAK5B,EAAL,oBAAoC6B,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UAC9GM,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,WACJgC,aAAae,WAAW,SACxBjB,GAAmB,GACnB1D,GAAW,QAmEjB,OAAO,cAACiD,EAAYL,SAAb,CAAsBxB,MAAOA,EAA7B,SAAqCH,K,kCCjM/B2D,EAJO,SAAC,GAA2D,IAAzD7E,EAAwD,EAAxDA,QAAY8E,EAA4C,2BAC/E,OAAO,cAACC,EAAA,EAAD,2BAAYD,GAAZ,aAAmB9E,EAAU,cAAC,cAAD,CAAagF,KAAK,MAAMC,MAAM,UAAaH,EAAK5D,a,QCIhFgE,EAAcC,MAAaC,MAAM,CACrCrC,SAAUoC,MAAaE,WACvBC,SAAUH,MAAaE,aAyCVE,EAtCD,SAAC,GAA+C,IAA7Cb,EAA4C,EAA5CA,aAA4C,EACRnB,IAA3CF,EADmD,EACnDA,MAAOrD,EAD4C,EAC5CA,QAASmD,EADmC,EACnCA,gBADmC,EAClBjD,MACzC,OAAIiD,EAAwB,cAAC,IAAD,CAAUqC,GAAG,eAGvC,cAAC,IAAD,CACEC,cAAe,CACb1C,SAAU,GACVuC,SAAU,IAEZI,iBAAkBR,EAClBS,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBxC,EAAMuC,GACNC,GAAc,IARlB,SAWG,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAf,EAA6BC,OAA7B,OACC,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,IAAImD,KAAK,OAAOC,MAAM,WAAWC,UAAWC,QAE1D,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,WAAWmD,KAAK,WAAWC,MAAM,WAAWC,UAAWC,QAErE,eAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,cAAC,EAAD,CAAelG,QAASA,EAASuG,QAAQ,YAAYtB,MAAM,UAAUuB,SAAUT,EAAcU,QAASX,EAAtG,mBAGA,cAACY,EAAA,EAAD,CAAML,UAAU,SAASF,KAAK,SAASI,QAAQ,QAAQE,QAAS/B,EAAhE,yCClCNiC,EAAiBxB,MAAaC,MAAM,CACxCf,UAAWc,MAAayB,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaxB,WAClEf,SAAUa,MAAayB,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaxB,WACjEtC,SAAUoC,MAAayB,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaxB,WACjEyB,MAAO3B,MAAa2B,MAAM,iBAAiBzB,WAC3CC,SAAUH,MAAayB,IAAI,GAAI,cAAcC,IAAI,IAAK,aAAaxB,WACnE0B,gBAAiB5B,MACd6B,MAAM,CAAC7B,IAAQ,YAAa,MAAO,wBACnCE,aA+DU4B,EA5DE,SAAC,GAAkD,IAAhDvC,EAA+C,EAA/CA,aAA+C,EAC5BnB,IAA7BH,EADyD,EACzDA,SAAUpD,EAD+C,EAC/CA,QAASE,EADsC,EACtCA,MAC3B,OACE,cAAC,IAAD,CACEuF,cAAe,CACbpB,UAAW,GACXC,SAAU,GACVvB,SAAU,GACV+D,MAAO,GACPxB,SAAU,GACVyB,gBAAiB,IAEnBrB,iBAAkBiB,EAClBhB,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBzC,EAAS,CACPiB,UAAWuB,EAAOvB,UAClBC,SAAUsB,EAAOtB,SACjBvB,SAAU6C,EAAO7C,SACjB+D,MAAOlB,EAAOkB,MACdxB,SAAUM,EAAON,SACjBZ,aAAcA,IAEhBmB,GAAc,IAnBlB,SAsBG,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAf,OACC,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,YAAYmD,KAAK,OAAOC,MAAM,aAAaC,UAAWC,QAEpE,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,WAAWmD,KAAK,OAAOC,MAAM,YAAYC,UAAWC,QAElE,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,WAAWmD,KAAK,OAAOC,MAAM,WAAWC,UAAWC,QAEjE,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,QAAQmD,KAAK,QAAQC,MAAM,QAAQC,UAAWC,QAE5D,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,WAAWmD,KAAK,WAAWC,MAAM,WAAWC,UAAWC,QAErE,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,kBAAkBmD,KAAK,WAAWC,MAAM,mBAAmBC,UAAWC,QAEpF,eAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,cAAC,EAAD,CAAelG,QAASA,EAASuG,QAAQ,YAAYtB,MAAM,UAAUuB,SAAUT,EAAcU,QAASX,EAAtG,sBAGA,cAACY,EAAA,EAAD,CAAML,UAAU,SAASF,KAAK,SAASI,QAAQ,QAAQE,QAAS/B,EAAhE,0CAIF,cAACuB,EAAA,EAAD,CAAKC,OAAQ,EAAb,SAAiBhG,WC9DZgH,EAVK,WAAoB,IAAD,EACTnH,oBAAS,GADA,mBAC9BoH,EAD8B,KACtBC,EADsB,KAGrC,SAAS1C,IACP0C,GAAU,SAACC,GAAD,OAAiBA,KAG7B,OAAO,8BAAMF,EAAS,cAAC,EAAD,CAAUzC,aAAcA,IAAmB,cAAC,EAAD,CAAOA,aAAcA,O,0BCQzE4C,EAVM,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,QAClC,OACE,gCACE,cAACC,EAAA,EAAD,CAAMnB,QAAQ,WAAWtB,MAAM,UAAUmB,MAAK,iBAAYmB,EAAZ,OAC9C,cAACG,EAAA,EAAD,CAAMnB,QAAQ,WAAWtB,MAAM,UAAUmB,MAAK,eAAUoB,EAAV,OAC9C,cAACE,EAAA,EAAD,CAAMnB,QAAQ,WAAWtB,MAAM,UAAUmB,MAAK,mBAAcqB,EAAd,W,2BCJ9CE,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLD,MAAO,MAoDIE,EAhDS,SAAC,GAAmE,IAAjE3G,EAAgE,EAAhEA,MAAO4G,EAAyD,EAAzDA,SAAU7B,EAA+C,EAA/CA,MACpC8B,EAAUP,IAgBhB,OACE,sBAAKQ,UAAWD,EAAQL,KAAxB,UACE,cAACO,EAAA,EAAD,CAAY9F,GAAG,eAAe+F,cAAY,EAA1C,SACGjC,IAEH,eAACkC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAvC,UACE,cAACH,EAAA,EAAD,CAAM1F,MAAI,EAAC8F,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAQtH,MAAwB,kBAAVA,EAAqBA,EAAQ,EAAGuH,SAjBnC,SAACC,EAAYC,GACtCb,EAASa,IAgBiFC,kBAAgB,mBAEtG,eAACT,EAAA,EAAD,CAAM1F,MAAI,EAAV,UACE,cAACoG,EAAA,EAAD,CACEb,UAAWD,EAAQH,MACnB1G,MAAOA,EACP6E,OAAO,QACP0C,SA5BgB,SAACK,GACzBhB,EAAgC,KAAvBgB,EAAMC,OAAO7H,MAAe,GAAK8H,OAAOF,EAAMC,OAAO7H,SA4BtD+H,OArBS,YACb/H,EAAQ,GAAe,KAAVA,IACf4G,EAAS,IAoBHoB,WAAY,CACVC,KAAM,EACN1C,IAAK,EACLC,IAAK,IACLV,KAAM,SACN,kBAAmB,kBAGtB,cCUIoD,EA1DM,WAAoB,IAAD,EACExJ,mBAAqC,IADvC,mBAC/ByJ,EAD+B,KACjBC,EADiB,OAEF1J,mBAAqC,IAFnC,mBAE/B2J,EAF+B,KAEnBC,EAFmB,OAGM5J,mBAAqC,IAH3C,mBAG/B6J,EAH+B,KAGfC,EAHe,OAII9J,mBAA0B,KAJ9B,mBAI/B+J,EAJ+B,KAIhBC,EAJgB,OAKZhK,oBAAS,GALG,mBAK/BG,EAL+B,KAKxBC,EALwB,OAOVJ,mBAAiB,CAAEwH,MAAO,EAAGC,IAAK,EAAGC,QAAS,IAPpC,mBAO/BuC,EAP+B,KAOvBC,EAPuB,KA2CtC,OAJAxF,qBAAU,YApBc,WACtB,GAA6B,kBAAlBqF,EAA4B,CACrC,IAAII,EAAe,EACS,kBAAjBV,IACTU,GAAgBV,EAChBS,GAAU,SAACE,GAAD,mBAAC,eAAqBA,GAAtB,IAAkC5C,MAAO6C,KAAKC,MAAOP,EAAgB,IAAON,SAE9D,kBAAfE,IACTQ,GAAgBR,EAChBO,GAAU,SAACE,GAAD,mBAAC,eAAqBA,GAAtB,IAAkC3C,IAAK4C,KAAKC,MAAOP,EAAgB,IAAOJ,SAExD,kBAAnBE,IACTM,GAAgBN,EAChBK,GAAU,SAACE,GAAD,mBAAC,eAAqBA,GAAtB,IAAkC1C,QAAS2C,KAAKC,MAAOP,EAAgB,IAAOF,SAElEzJ,EAApB+J,EAAe,MAMrBI,KACC,CAACd,EAAcE,EAAYE,EAAgBE,IAG5C,gCACE,cAAC1B,EAAA,EAAD,CAAY9F,GAAG,iBAAiB+F,cAAY,EAA5C,4BAGA,cAACW,EAAA,EAAD,CAAOD,kBAAgB,iBAAiB1H,MAAOyI,EAAelB,SAvCxC,SAACK,GACzBc,EAAwC,KAAvBd,EAAMC,OAAO7H,MAAe,GAAK8H,OAAOF,EAAMC,OAAO7H,SAsCuB+H,OAnC5E,YACbU,EAAgB,GAAuB,KAAlBA,IACvBC,EAAiB,MAkCjB,cAAC,EAAD,CAAiB3D,MAAM,gBAAgB/E,MAAOmI,EAAcvB,SAAUwB,IACtE,cAAC,EAAD,CAAiBrD,MAAM,UAAU/E,MAAOuI,EAAgB3B,SAAU4B,IAClE,cAAC,EAAD,CAAiBzD,MAAM,MAAM/E,MAAOqI,EAAYzB,SAAU0B,IAC1D,cAAC,EAAD,eAAkBK,IACjB9J,GAAS,6ECtDDqK,EARG,WAChB,OACE,8BACE,cAAC,EAAD,OCUSC,EAbC,WAAoB,IAC1BlJ,EAAgBiC,IAAhBjC,YACR,OACE,gCACE,8CACA,8BAAMA,EAAYgB,KAClB,8BAAMhB,EAAY0B,OAClB,8BAAM1B,EAAYyB,WAClB,8BAAMzB,EAAYM,YCKT6I,EAZM,SAAC,GAAoD,IAAlDvJ,EAAiD,EAAjDA,SAAa4D,EAAoC,4BAC/D3B,EAAoBI,IAApBJ,gBACR,OACE,cAAC,IAAD,2BACM2B,GADN,IAEE4F,OAAQ,WACN,OAAOvH,EAAkBjC,EAAW,cAAC,IAAD,CAAUsE,GAAI,CAAEmF,SAAU,Y,SCOvDC,EAVK,WAAe,IAAD,EACA7K,oBAAS,GADT,mBACzB8K,EADyB,KACfC,EADe,KAOhC,MAAO,CAAED,WAAUE,eAJI,WACrBD,GAAY,SAACE,GAAD,OAAeA,Q,SCTlBC,GAAaC,YAAe,CACvCC,QAAS,CACPhF,KAAM,WAIGiF,GAAYF,YAAe,CACtCC,QAAS,CACPhF,KAAM,UCDJkF,GAAqBhL,IAAMC,eAAc,eAQ/C,IASegL,GATO,SAAC,GAAmD,IAAjDpK,EAAgD,EAAhDA,SAAgD,EAClCqK,IAA7BV,EAD+D,EAC/DA,SAAUE,EADqD,EACrDA,eAClB,OACE,cAAC,IAAD,CAAuBS,MAAOX,EAAWO,GAAYH,GAArD,SACE,cAACI,GAAmBxI,SAApB,CAA6BxB,MAAO0J,EAApC,SAAqD7J,O,2FCJrDyG,GAAYC,aAAW,SAAC4D,GAAD,MAAY,CACvCC,WAAY,CACVC,YAAaF,EAAMhD,QAAQ,GAC3BmD,KAAM,QACN1G,MAAO,WAET2G,MAAO,CACLF,YAAa,IAEfG,OAAQ,CACNC,SAAU,GAEZC,KAAM,CACJjE,MAAO,GACPkE,OAAQ,IAEVC,aAAc,CACZhH,MAAO,eA4CIiH,GAxCG,SAAC,GASiB,IARlClM,EAQiC,EARjCA,QACAsD,EAOiC,EAPjCA,OACA6I,EAMiC,EANjCA,YACAhG,EAKiC,EALjCA,KACAiG,EAIiC,EAJjCA,gBACAC,EAGiC,EAHjCA,mBACAC,EAEiC,EAFjCA,gBACAC,EACiC,EADjCA,kBAEMrE,EAAUP,KAEhB,OACE,cAAC6E,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYxE,UAAWD,EAAQuD,WAAYhF,QAAS2F,EAApD,SACE,cAAC,KAAD,MAEF,cAAChE,EAAA,EAAD,CAAYD,UAAWD,EAAQ0D,MAAOrF,QAAQ,KAA9C,0BAGA,cAACxB,EAAA,EAAD,CAAQwB,QAAQ,OAAOtB,MAAM,UAAUwB,QAAS6F,EAAhD,kBAGA,cAACvH,EAAA,EAAD,CAAQwB,QAAQ,OAAOtB,MAAM,UAAUwB,QAAS8F,EAAhD,oBAGA,qBAAKpE,UAAWD,EAAQ2D,SACxB,cAACe,GAAA,EAAD,CAAQzE,UAAWD,EAAQ+D,aAAcY,QAAkB,UAAT1G,EAAkByC,SAAUuD,IAC9E,cAACQ,GAAA,EAAD,CAAYxE,UAAWD,EAAQuD,WAAYhF,QAAS4F,EAApD,SACE,cAAC,KAAD,CAAmBlE,UAAWD,EAAQ6D,SAExC,cAAC,EAAD,CAAe/L,QAASA,EAASuG,QAAQ,WAAWtB,MAAM,UAAUwB,QAASnD,EAA7E,0BCxBOwJ,GAvCA,WACb,IAAMC,EAAUtJ,cADgB,EAEJF,IAApBD,EAFwB,EAExBA,OAAQtD,EAFgB,EAEhBA,QACVmM,EFICnL,qBAAWqK,IEFLlF,EACToF,eADFJ,QAAWhF,KAoBb,OACE,cAAC,GAAD,CACEnG,QAASA,EACTsD,OAAQA,EACR8I,gBArBoB,WACtBW,EAAQC,KAAK,MAqBXX,mBAlBuB,WACzBU,EAAQC,KAAK,aAkBXV,gBAfoB,WACtBS,EAAQC,KAAK,UAeXT,kBAZsB,WACxBQ,EAAQC,KAAK,YAYXb,YAAaA,EACbhG,KAAMA,K,oBCxCC8G,GAAY,CAAC,gBAAiB,aAAc,SAAU,OAAQ,QAAS,SAAU,SAAU,OAAQ,S,+EC+BjGC,GAvBE,SAAC,GAChB,OAD6D,EAA3CC,UAEhB,IAAK,QACH,OAAO,cAAC,KAAD,IACT,IAAK,SACH,OAAO,cAAC,KAAD,IACT,IAAK,aACH,OAAO,cAAC,KAAD,IACT,IAAK,OACH,OAAO,cAAC,KAAD,IACT,IAAK,OACH,OAAO,cAAC,KAAD,IACT,IAAK,SACH,OAAO,cAAC,KAAD,IACT,IAAK,SACH,OAAO,cAAC,KAAD,IACT,IAAK,QACH,OAAO,cAAC,KAAD,IACT,QACE,OAAO,cAAC,KAAD,MCTEC,GAVU,SAAC,GAAsD,IAApDD,EAAmD,EAAnDA,SAC1B,OACE,cAACE,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAMC,SAAS,QAAQtI,MAAM,UAA7B,SACE,cAAC,GAAD,CAAUkI,SAAUA,SCRtBxF,GAAYC,aAAW,SAAC4D,GAAD,OAC3BgC,aAAa,CACXC,SAAU,CACRC,gBAAiBlC,EAAML,QAAQwC,WAAWC,OAE5CC,KAAM,CACJ3H,OAAQsF,EAAMhD,QAAQ,EAAG,EAAG,SAuBnBsF,GAdM,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAChB7F,EAAUP,KAEhB,OACE,eAACqG,GAAA,EAAD,CAAU7F,UAAWD,EAAQuF,SAA7B,UACE,cAAC,GAAD,CAAkBN,SAAUY,EAAKZ,WACjC,cAACc,GAAA,EAAD,CAAcC,QAASH,EAAK/K,KAAMmL,UAAWJ,EAAKZ,WAClD,cAACiB,GAAA,EAAD,UACE,cAAChG,EAAA,EAAD,CAAY7B,QAAQ,KAApB,mBAA6BwH,EAAKF,KAAlC,iB,oBCNOQ,GAbE,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAClB,OACE,cAACC,GAAA,EAAD,UACGD,EAAUE,KAAI,SAACT,EAAMU,GAAP,OACb,gCACE,cAAC,GAAD,CAAcV,KAAMA,IACnBU,IAAUH,EAAU9L,OAAS,EAAI,cAACkM,GAAA,EAAD,CAASnI,QAAQ,UAAa,+BAFxDwH,EAAKzL,U,UCDjBqF,GAAYC,aAAW,SAAC4D,GAAD,MAAY,CACvCmD,gBAAiB,CACfC,QAAS,OACT9G,MAAO,QAET2F,SAAU,CACRoB,KAAM,OAsCKC,GAlCc,SAAC,GAAwF,IAAtFR,EAAqF,EAArFA,UAAWzB,EAA0E,EAA1EA,QAASkC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,OACxD9G,EAAUP,KAgBhB,OACE,cAAC4G,GAAA,EAAD,UACGD,EAAUE,KAAI,SAACT,EAAMU,GAAP,OACb,gCACE,sBAAKtG,UAAWD,EAAQyG,gBAAxB,UACE,cAACM,GAAA,EAAD,CAAUpC,QAASA,EAAQqC,SAASnB,EAAKzL,IAAKsG,SAAU,SAACuG,EAAGC,GAAJ,OApBlE,SAAsBD,EAAwCC,EAAY9M,GAGpEyM,EAFAC,EACEI,EACS,CAAC9M,GAED,GAGT8M,EACS,SAAC3M,GAAD,4BAAmBA,GAAnB,CAA8BH,KAE9B,SAACG,GAAD,OAAeA,EAAUE,QAAO,SAACC,GAAD,OAAUA,IAASN,OASQ+M,CAAaF,EAAGC,EAAGrB,EAAKzL,OAC1F,qBAAK6F,UAAWD,EAAQuF,SAAxB,SACE,cAAC,GAAD,CAAcM,KAAMA,SAGvBU,IAAUH,EAAU9L,OAAS,EAAI,cAACkM,GAAA,EAAD,CAASnI,QAAQ,UAAa,+BAPxDwH,EAAKzL,UCmBRgN,GA9CE,SAAC,GAA4D,IAA1DvB,EAAyD,EAAzDA,KAAMwB,EAAmD,EAAnDA,iBAChBjO,EAAgBiC,IAAhBjC,YADmE,EAErCP,IAA9Bf,EAFmE,EAEnEA,QAASa,EAF0D,EAE1DA,iBACjB,OACE,8BACE,cAAC,IAAD,CACE4E,cAAe,CACbzC,KAAM+K,EAAK/K,KACX6K,KAAME,EAAKF,KACXV,cAA4BqC,IAAlBzB,EAAKZ,SAA0BY,EAAKZ,SAAsB,iBAEtEzH,iBAAkB+J,GAClB9J,SAAU,SAACC,EAAD,GAA0C,EAA/BC,cAA+B,EAAhB6J,UAClC7O,EAAiB,2BAAKkN,GAAN,IAAY/K,KAAM4C,EAAO5C,KAAM6K,KAAMjI,EAAOiI,KAAMV,SAAUvH,EAAOuH,WAAwB7L,GAC3GiO,KATJ,SAYG,gBAAGzJ,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAsBH,GAArC,EAA6BI,OAA7B,EAAqCJ,QAAQ+J,EAA7C,EAA6CA,cAA7C,OACC,eAAC,IAAD,WACE,cAAC1J,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,OAAOmD,KAAK,OAAOC,MAAM,OAAOC,UAAWC,QAEzD,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,OAAOmD,KAAK,SAASC,MAAM,OAAOC,UAAWC,QAE3D,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC0J,GAAA,EAAD,CAAQvO,MAAOuE,EAAOuH,SAAUvE,SAAU,SAACuG,GAAD,OAAOQ,EAAc,WAAYR,EAAEjG,OAAO7H,QAApF,SACG4L,GAAUuB,KAAI,SAACrB,GAAD,OACb,cAAC0C,GAAA,EAAD,CAAyBxO,MAAO8L,EAAhC,SACGA,GADYA,UAMrB,cAAClH,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,EAAD,CAAelG,QAASA,EAASuG,QAAQ,YAAYtB,MAAM,UAAUuB,SAAUT,EAAcU,QAASX,EAAtG,6BCrCD2J,GAAatK,MAAaC,MAAM,CAC3CpC,KAAMmC,MAAaE,WACnBwI,KAAM1I,MAAa2K,WAAWzK,WAC9B8H,SAAUhI,MAAa4K,aAoHVC,GAjHE,WAAoB,IAAD,EACiEjP,IAA3FR,EAD0B,EAC1BA,WAAYC,EADc,EACdA,aAAcG,EADA,EACAA,mBAAoBX,EADpB,EACoBA,QAASY,EAD7B,EAC6BA,mBAAoBE,EADjD,EACiDA,YADjD,EAENf,oBAAS,GAFH,mBAE3BkQ,EAF2B,KAEnBC,EAFmB,OAGVnQ,oBAAS,GAHC,mBAG3BoQ,EAH2B,KAGrBC,EAHqB,OAIFrQ,oBAAS,GAJP,mBAI3BsQ,EAJ2B,KAIjBC,EAJiB,KAK1BhP,EAAgBiC,IAAhBjC,YAL0B,EAMJvB,mBAAmB,IANf,mBAM3B8M,EAN2B,KAMlBkC,EANkB,OAOIhP,mBAAsB,MAP1B,mBAO3BwQ,EAP2B,KAOdC,EAPc,KASlC,SAASjB,IACa,OAAhBgB,GACFD,GAAY,SAAC7N,GAAD,OAAgBA,KAUhC,OANAgC,qBAAU,WACe,IAAnBoI,EAAQrK,QACVgO,EAAe1P,EAAY+L,EAAQ,OAEpC,CAACA,IAGF,sCACIsD,GACA,gCACE,cAAC,GAAD,CAAU7B,UAAW/N,EAAWkQ,OAAOjQ,KACvC,cAACuE,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS,kBAAM2J,GAAQ,IAAnE,mCAMHD,GACC,iCACIF,IAAWI,GACX,qCACE,cAAC,GAAD,CAAsBxD,QAASA,EAASkC,WAAYA,EAAYT,UAAW9N,EAAcwO,QAAM,IAC/F,cAACjK,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS,kBAAMyJ,GAAU,IAArE,6BAGA,cAACnL,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS8I,EAArD,2BAGA,cAACxK,EAAA,EAAD,CACEwB,QAAQ,YACRtB,MAAM,UACNwB,QAAS,WACgB,IAAnBoG,EAAQrK,QAAc5B,EAAmBiM,EAAQ,GAAIvL,IAJ7D,6BASA,cAACyD,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS,kBAAM2J,GAAQ,IAAnE,8BAKFH,GAA6B,IAAnBpD,EAAQrK,QAAgB6N,GAA4B,OAAhBE,GAC9C,cAAC,GAAD,CAAUxC,KAAMwC,EAAahB,iBAAkBA,IAEhDU,GACC,8BACE,cAAC,IAAD,CACExK,cAAe,CACbzC,KAAM,GACN6K,KAAM,EACNV,SAAU,iBAEZzH,iBAAkB+J,GAClB9J,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAe6J,EAAgB,EAAhBA,UAClC/O,EAAmBiF,EAAQtE,GAC3BoO,IACA7J,GAAc,IAVlB,SAaG,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAsBH,GAArC,EAA6BI,OAA7B,EAAqCJ,QAAQ+J,EAA7C,EAA6CA,cAA7C,OACC,eAAC,IAAD,WACE,cAAC1J,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,OAAOmD,KAAK,OAAOC,MAAM,OAAOC,UAAWC,QAEzD,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,IAAD,CAAOlD,KAAK,OAAOmD,KAAK,SAASC,MAAM,OAAOC,UAAWC,QAE3D,cAACL,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC0J,GAAA,EAAD,CAAQvO,MAAOuE,EAAOuH,SAAUvE,SAAU,SAACuG,GAAD,OAAOQ,EAAc,WAAYR,EAAEjG,OAAO7H,QAApF,SACG4L,GAAUuB,KAAI,SAACrB,GAAD,OACb,cAAC0C,GAAA,EAAD,CAAyBxO,MAAO8L,EAAhC,SACGA,GADYA,UAMrB,cAAClH,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAAC,EAAD,CAAelG,QAASA,EAASuG,QAAQ,YAAYtB,MAAM,UAAUuB,SAAUT,EAAcU,QAASX,EAAtG,2BAIF,cAACG,EAAA,EAAD,CAAKC,OAAQ,EAAb,SACE,cAACnB,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS,kBAAMyJ,GAAU,IAArE,2CClGPQ,GAfU,WACvB,OACE,qBACEC,MAAO,CACLC,UAAW,QACXhC,QAAS,OACTiC,eAAgB,SAChBpI,WAAY,UALhB,SAQE,cAAC,eAAD,CAAczI,SAAS,OCGd8Q,GAbE,WACf,IAAM/D,EAAUtJ,cAChB,OACE,gCACE,2CACA,sDACA,cAACsB,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS,kBAAMsG,EAAQC,KAAK,MAAxE,6B,oBCYS+D,GAbI,SAAC,GAAiD,IAA/CzC,EAA8C,EAA9CA,UACpB,OACE,cAACC,GAAA,EAAD,UACGD,EAAUE,KAAI,SAACT,EAAMU,GAAP,OACb,gCACE,cAAC,GAAD,CAAcV,KAAMA,IACnBU,IAAUH,EAAU9L,OAAS,EAAI,cAACkM,GAAA,EAAD,CAASnI,QAAQ,UAAa,+BAFxDwH,EAAKzL,UCyGR0O,GA1GA,WACb,SAASC,EAAWC,GAClB,OAAOC,aAAOC,aAAMF,EAAY,aAAc,IAAInN,MAAS,YAF7B,MAKJhE,mBAAuB,IALnB,mBAKzBsR,EALyB,KAKjBC,EALiB,OAMEvR,mBAAiB,GANnB,mBAMzBwR,EANyB,KAMdC,EANc,OAORzR,mBAAiBoR,aAAOpN,KAAK0N,MAAO,eAP5B,mBAOzBC,EAPyB,KAOnBC,EAPmB,OAQiB7R,IAAzBG,GARQ,EAQxBD,QARwB,EAQfE,MARe,EAQRD,YAAYE,EARJ,EAQIA,SARJ,EASFJ,oBAAS,GATP,mBASzB6R,EATyB,KAShBC,EATgB,KAUxBvQ,EAAgBiC,IAAhBjC,YAVwB,EAWkBP,IAA1CR,EAXwB,EAWxBA,WAAYC,EAXY,EAWZA,aAAcM,EAXF,EAWEA,YAXF,EAYFf,mBAAmB,IAZjB,mBAYzB8M,EAZyB,KAYhBkC,EAZgB,KAyEhC,OARAtK,qBAAU,WAlDRxE,GAAW,GACXsB,IAAM,CAAEC,OAAQ,MAAOC,IAAI,GAAD,OAAK5B,EAAL,mBAA2BoR,EAAWS,IAAShQ,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UACtHC,MAAK,SAACC,GACLwP,EAAUxP,EAAIC,SAEfG,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,QAwCxB,CAACyR,IAEJjN,qBAAU,YAvCV,WACE,IAAIqN,EAAU,EACdT,EAAOU,SAAQ,SAACC,GACdF,GAAWE,EAAUnE,QAGvB2D,EAAaM,GAkCbG,KACC,CAACZ,IAGF,sCACIO,GACA,gCACE,gCACE,cAAC5I,EAAA,EAAD,CACE7C,KAAK,OACL9E,MAAOqQ,EACP9I,SAAU,SAACuG,GACTwC,EAAQxC,EAAEjG,OAAO7H,UAGrB,mDAAsBkQ,KACH,IAAlBF,EAAO7O,QAAgB,yEACxB,cAACuC,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QAAS,kBAAMoL,GAAW,IAAtE,yBAIF,cAAC,GAAD,CAAYvD,UAAW+C,OAG1BO,GACC,gCACE,cAAC,GAAD,CAAsBtD,UAAW/N,EAAWkQ,OAAOjQ,GAAeqM,QAASA,EAASkC,WAAYA,IAChG,cAAChK,EAAA,EAAD,CAAQwB,QAAQ,YAAYtB,MAAM,UAAUwB,QA1DpD,WACE,IAD2B,IAAD,WACjBlE,GACP,IAAM2P,EAAYpR,EAAY+L,EAAQtK,IACpB,OAAd2P,GACF3Q,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAK5B,EAAL,mBAA2BoR,EAAWS,GAAtC,YAA+CQ,EAAU5P,IAC5DZ,QAAS,CAAEC,cAAc,UAAD,OAAYL,EAAYM,UAE/CC,MAAK,SAACC,GACL,IAAMqQ,EAAU,2BAAQD,GAAR,IAAmB5P,GAAIR,EAAIC,KAAKO,GAAII,OAAQZ,EAAIC,KAAKW,SACrE4O,GAAU,SAAC7O,GAAD,4BAAmBA,GAAnB,CAA8B0P,UAEzCjQ,OAAM,SAACC,GACFA,EAAIC,SACNjC,EAASgC,EAAIC,SAASL,KAAKM,SAE3BlC,EAAS,6BAGZ0B,MAAK,kBAAM5B,GAAW,OAnBpBsC,EAAI,EAAGA,EAAIsK,EAAQrK,OAAQD,IAAM,EAAjCA,GAsBTsP,GAAW,IAmCL,iCCpEKO,OA5Bf,WAEE,OAAwB,OADI7O,IAApBJ,gBAC6B,cAAC,GAAD,IAGnC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkP,KAAK,IAAIC,OAAK,EAACjM,UAAWa,IACjC,eAAC,EAAD,CAAcmL,KAAK,aAAnB,UACE,cAAC,GAAD,IACA,cAAC,EAAD,OAEF,eAAC,EAAD,CAAcA,KAAK,WAAnB,UACE,cAAC,GAAD,IACA,cAAC,EAAD,OAEF,eAAC,EAAD,CAAcA,KAAK,QAAnB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,eAAC,EAAD,CAAcA,KAAK,UAAnB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,IAAD,CAAOA,KAAK,IAAIhM,UAAWyK,SCtBlByB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5Q,MAAK,YAAkD,IAA/C6Q,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mBCEdO,IAASrI,OACP,cAAC,KAAD,CAAQsI,SAAUC,gBAAlB,SACE,cAAC,GAAD,UACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAACC,GAAA,EAAD,IACA,cAAC,GAAD,aAKRC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.866e6dea.chunk.js","sourcesContent":["export const API_ADDRESS = 'https://sipv.gorecan.com:11111/api/v1';\n","import { useState } from 'react';\n\ninterface IApiState {\n  loading: boolean;\n  error?: string;\n  setLoading: (value: boolean) => void;\n  setError: (error: string) => void;\n}\n\nexport function useApiState(): IApiState {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n\n  return { loading, error, setLoading, setError };\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { RotateLoader } from 'react-spinners';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\nimport { Food, FoodType } from '../types';\nimport { useApiState } from '../hooks/useApiState';\nimport { IUser } from './AuthContext';\n\ntype CreatePersonalFood = {\n  name: string;\n  kcal: number;\n  foodType: string;\n};\n\ntype FoodProviderProps = {\n  children?: React.ReactNode;\n};\n\ntype IPublicFoodContext = {\n  publicFood: Food[];\n  personalFood: Food[];\n  loadPublicFood: (data: IUser) => void;\n  loadPersonalFood: (data: IUser) => void;\n  createPersonalFood: (data: CreatePersonalFood, userData: IUser) => void;\n  removePersonalFood: (data: string, userData: IUser) => void;\n  editPersonalFood: (data: Food, userData: IUser) => void;\n  getFoodById: (data: string) => Food | null;\n  loading: boolean;\n};\n\nconst PublicFoodContext = React.createContext<IPublicFoodContext>({\n  publicFood: [],\n  personalFood: [],\n  loadPublicFood: () => {\n    return;\n  },\n  loadPersonalFood: () => {\n    return;\n  },\n  createPersonalFood: () => {\n    return;\n  },\n  removePersonalFood: () => {\n    return;\n  },\n  editPersonalFood: () => {\n    return;\n  },\n  getFoodById: () => null,\n  loading: false,\n});\n\nexport function useFood(): IPublicFoodContext {\n  return useContext(PublicFoodContext);\n}\n\nconst FoodProvider = ({ children }: FoodProviderProps): JSX.Element => {\n  const [publicFood, setPublicFood] = useState<Food[]>([]);\n  const [personalFood, setPersonalFood] = useState<Food[]>([]);\n  const { loading, error, setLoading, setError } = useApiState();\n\n  function loadPublicFood(currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/foods/public`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPublicFood(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function loadPersonalFood(currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/foods/personal`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPersonalFood(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function getFoodById(id: string): Food | null {\n    for (let i = 0; i < publicFood.length; i++) {\n      if (publicFood[i].id == id) return publicFood[i];\n    }\n\n    for (let i = 0; i < personalFood.length; i++) {\n      if (personalFood[i].id == id) return personalFood[i];\n    }\n\n    return null;\n  }\n\n  function createPersonalFood(data: CreatePersonalFood, currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/foods/personal`, data, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPersonalFood((prevState) => [...prevState, res.data]);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function removePersonalFood(foodId: string, currentUser: IUser): void {\n    setLoading(true);\n    axios({\n      method: 'delete',\n      url: `${API_ADDRESS}/foods/personal/${foodId}`,\n      headers: { Authorization: `Bearer ${currentUser.token}` },\n    })\n      .then((res) => setPersonalFood((prevState) => prevState.filter((item) => item.id != foodId)))\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function editPersonalFood(data: Food, currentUser: IUser): void {\n    console.log(data);\n    setLoading(true);\n    axios({ method: 'put', url: `${API_ADDRESS}/foods/personal`, data, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPersonalFood((prevState) => [...prevState.filter((item) => item.id != data.id), data]);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  const value = {\n    publicFood: publicFood,\n    personalFood: personalFood,\n    loadPublicFood: loadPublicFood,\n    loadPersonalFood: loadPersonalFood,\n    getFoodById: getFoodById,\n    loading: loading,\n    createPersonalFood: createPersonalFood,\n    removePersonalFood: removePersonalFood,\n    editPersonalFood: editPersonalFood,\n  };\n\n  return <PublicFoodContext.Provider value={value}>{children}</PublicFoodContext.Provider>;\n};\n\nexport default FoodProvider;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { useFood } from './FoodContext';\nimport { useHistory } from 'react-router';\n\ntype AuthProviderProps = {\n  children?: React.ReactNode;\n};\n\ntype IRegister = {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  password: string;\n  toggleAction: () => void;\n};\n\ntype ILogin = {\n  username: string;\n  password: string;\n};\n\ntype Permission = 'PROFILE_PERMISSION' | 'PERSONAL_FOODS_PERMISSION';\n\nexport type IUser = {\n  username: string;\n  name: string;\n  id: string;\n  permissions: Permission[];\n  token: string;\n};\n\nconst initialUserInfo = {\n  username: '',\n  name: '',\n  id: '',\n  permissions: [],\n  token: '',\n};\n\ntype IAuthContext = {\n  isAuthenticated: boolean | null;\n  currentUser: IUser;\n  loading: boolean;\n  error: string;\n  register: (data: IRegister) => void;\n  login: (data: ILogin) => void;\n  logout: () => void;\n};\n\nconst AuthContext = React.createContext<IAuthContext>({\n  isAuthenticated: null,\n  currentUser: initialUserInfo,\n  loading: false,\n  error: '',\n  register: () => {\n    return;\n  },\n  login: () => {\n    return;\n  },\n  logout: () => {\n    return;\n  },\n});\n\nexport function useAuth(): IAuthContext {\n  return useContext(AuthContext);\n}\n\nconst AuthProvider = ({ children }: AuthProviderProps): JSX.Element => {\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = useState<IUser>(initialUserInfo);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { loadPublicFood, loadPersonalFood } = useFood();\n\n  function register(data: IRegister): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/register`, data: data })\n      .then((res) => {\n        setLoading(false);\n        data.toggleAction();\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n        setLoading(false);\n      });\n  }\n  function login(data: ILogin): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/authenticate`, data: data })\n      .then((res) => {\n        const { id, name, permissions, token, username } = res.data;\n        localStorage.setItem('token', token);\n        setCurrentUser({\n          id: id,\n          name: name,\n          permissions: permissions,\n          token: token,\n          username: username,\n        });\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred!');\n        }\n        setIsAuthenticated(false);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n  function logout(): void {\n    setLoading(true);\n    axios({ method: 'delete', url: `${API_ADDRESS}/session/destroy`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setLoading(false);\n      });\n  }\n\n  function profile(token: string): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/profile`, headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        const { firstName, lastName, id, permissions, username } = res.data;\n        setCurrentUser({\n          id: id,\n          name: firstName + ' ' + lastName,\n          username: username,\n          permissions: permissions,\n          token: token,\n        });\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n        localStorage.clear();\n        setIsAuthenticated(false);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n\n  function checkIfTokenValid(token: string): boolean {\n    if (new Date().getTime() / 1000 > parseInt(jwt_decode<{ exp: string; iat: string; id: string }>(token).exp)) return false;\n    return true;\n  }\n\n  function gotValidToken(): void {\n    const token = localStorage.getItem('token');\n    if (token && checkIfTokenValid(token)) {\n      profile(token);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }\n\n  useEffect(() => {\n    gotValidToken();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadPersonalFood(currentUser);\n      loadPublicFood(currentUser);\n    }\n  }, [isAuthenticated]);\n\n  const value = {\n    isAuthenticated: isAuthenticated,\n    currentUser: currentUser,\n    loading: loading,\n    error: error,\n    register: register,\n    login: login,\n    logout: logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport { Button, ButtonProps } from '@material-ui/core';\nimport { PulseLoader } from 'react-spinners';\n\nexport type LoadingButtonProps = ButtonProps & {\n  loading: boolean;\n};\n\nconst LoadingButton = ({ loading, ...rest }: LoadingButtonProps): JSX.Element => {\n  return <Button {...rest}>{loading ? <PulseLoader size='8px' color='white' /> : rest.children}</Button>;\n};\n\nexport default LoadingButton;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Redirect } from 'react-router';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport * as Yup from 'yup';\n\nexport type LoginProps = {\n  toggleAction: () => void;\n};\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nconst Login = ({ toggleAction }: LoginProps): JSX.Element => {\n  const { login, loading, isAuthenticated, error } = useAuth();\n  if (isAuthenticated) return <Redirect to='/dashboard' />;\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        login(values);\n        setSubmitting(false);\n      }}\n    >\n      {({ submitForm, isSubmitting, errors }) => (\n        <Form>\n          <Box margin={1}>\n            <Field name='w' type='text' label='Username' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='password' type='password' label='Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n              Login\n            </LoadingButton>\n            <Link component='button' type='button' variant='body1' onClick={toggleAction}>\n              Create an account\n            </Link>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport * as Yup from 'yup';\n\nexport type RegisterProps = {\n  toggleAction: () => void;\n};\n\nconst RegisterSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too short!').max(50, 'Too long!').required(),\n  lastName: Yup.string().min(2, 'Too short!').max(50, 'Too long!').required(),\n  username: Yup.string().min(5, 'Too short!').max(50, 'Too long!').required(),\n  email: Yup.string().email('Invalid email').required(),\n  password: Yup.string().min(12, 'Too short!').max(100, 'Too long!').required(),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required(),\n});\n\nconst Register = ({ toggleAction }: RegisterProps): JSX.Element => {\n  const { register, loading, error } = useAuth();\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={RegisterSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        register({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          username: values.username,\n          email: values.email,\n          password: values.password,\n          toggleAction: toggleAction,\n        });\n        setSubmitting(false);\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Form>\n          <Box margin={1}>\n            <Field name='firstName' type='text' label='First Name' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='lastName' type='text' label='Last Name' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='username' type='text' label='Username' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='email' type='email' label='Email' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='password' type='password' label='Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='confirmPassword' type='password' label='Confirm Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n              Register\n            </LoadingButton>\n            <Link component='button' type='button' variant='body1' onClick={toggleAction}>\n              I already have an account\n            </Link>\n          </Box>\n          <Box margin={1}>{error}</Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport Login from '../../organisms/Login/Login';\nimport Register from '../../organisms/Register/Register';\n\nconst LandingPage = (): JSX.Element => {\n  const [action, setAction] = useState(false);\n\n  function toggleAction(): void {\n    setAction((prevAction) => !prevAction);\n  }\n\n  return <div>{action ? <Register toggleAction={toggleAction} /> : <Login toggleAction={toggleAction} />}</div>;\n};\n\nexport default LandingPage;\n","import { Chip } from '@material-ui/core';\nimport React from 'react';\n\nexport type MacroNumbersProps = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroNumbers = ({ carbs, fat, protein }: MacroNumbersProps): JSX.Element => {\n  return (\n    <div>\n      <Chip variant='outlined' color='primary' label={`Carbs: ${carbs}g`} />\n      <Chip variant='outlined' color='primary' label={`Fat: ${fat}g`} />\n      <Chip variant='outlined' color='primary' label={`Protein: ${protein}g`} />\n    </div>\n  );\n};\n\nexport default MacroNumbers;\n","import { Grid, Input, makeStyles, Slider, Typography } from '@material-ui/core';\nimport { VolumeUp } from '@material-ui/icons';\nimport React from 'react';\n\nexport type SliderWithInputProps = {\n  label: string;\n  value: number | number[] | string;\n  setValue: React.Dispatch<React.SetStateAction<number | number[] | string>>;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst SliderWithInput = ({ value, setValue, label }: SliderWithInputProps): JSX.Element => {\n  const classes = useStyles();\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleSliderChange = (_: unknown, newValue: number | number[]): void => {\n    setValue(newValue);\n  };\n\n  const handleBlur = (): void => {\n    if (value < 0 || value === '') {\n      setValue(0);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id='input-slider' gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems='center'>\n        <Grid item xs>\n          <Slider value={typeof value === 'number' ? value : 0} onChange={handleSliderChange} aria-labelledby='input-slider' />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin='dense'\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n          {'%'}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SliderWithInput;\n","import { Chip, Input, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport MacroNumbers from '../../atoms/MacroNumbers/MacroNumbers';\nimport SliderWithInput from '../../molecules/SliderWithInput/SliderWithInput';\n\n// export type MacroCouterProps = {};\ntype Macros = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroCounter = (): JSX.Element => {\n  const [carbsPercent, setCarbsPercent] = useState<number | number[] | string>(50);\n  const [fatPercent, setFatPercent] = useState<number | number[] | string>(15);\n  const [proteinPercent, setProteinPercent] = useState<number | number[] | string>(35);\n  const [totalCalories, setTotalCalories] = useState<number | string>(2000);\n  const [error, setError] = useState(false);\n\n  const [macros, setMacros] = useState<Macros>({ carbs: 0, fat: 0, protein: 0 });\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTotalCalories(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = (): void => {\n    if (totalCalories < 0 || totalCalories === '') {\n      setTotalCalories(0);\n    }\n  };\n\n  const calculateMacros = (): void => {\n    if (typeof totalCalories === 'number') {\n      let percentTotal = 0;\n      if (typeof carbsPercent === 'number') {\n        percentTotal += carbsPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, carbs: Math.round((totalCalories / 400) * carbsPercent) }));\n      }\n      if (typeof fatPercent === 'number') {\n        percentTotal += fatPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, fat: Math.round((totalCalories / 900) * fatPercent) }));\n      }\n      if (typeof proteinPercent === 'number') {\n        percentTotal += proteinPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, protein: Math.round((totalCalories / 400) * proteinPercent) }));\n      }\n      if (percentTotal > 100) setError(true);\n      else setError(false);\n    }\n  };\n\n  useEffect(() => {\n    calculateMacros();\n  }, [carbsPercent, fatPercent, proteinPercent, totalCalories]);\n\n  return (\n    <div>\n      <Typography id='total-calories' gutterBottom>\n        Total calories\n      </Typography>\n      <Input aria-labelledby='total-calories' value={totalCalories} onChange={handleInputChange} onBlur={handleBlur} />\n      <SliderWithInput label='Carbohydrates' value={carbsPercent} setValue={setCarbsPercent} />\n      <SliderWithInput label='Protein' value={proteinPercent} setValue={setProteinPercent} />\n      <SliderWithInput label='Fat' value={fatPercent} setValue={setFatPercent} />\n      <MacroNumbers {...macros} />\n      {error && <div>The percentage total is more than 100%</div>}\n    </div>\n  );\n};\n\nexport default MacroCounter;\n","import React from 'react';\nimport MacroCounter from '../../organisms/MacroCounter/MacroCounter';\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <div>\n      <MacroCounter />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst Profile = (): JSX.Element => {\n  const { currentUser } = useAuth();\n  return (\n    <div>\n      <h1>Profile page</h1>\n      <div>{currentUser.id}</div>\n      <div>{currentUser.name}</div>\n      <div>{currentUser.username}</div>\n      <div>{currentUser.token}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst PrivateRoute = ({ children, ...rest }: RouteProps): JSX.Element => {\n  const { isAuthenticated } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return isAuthenticated ? children : <Redirect to={{ pathname: '/' }} />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\n\ninterface ITheme {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst useDarkMode = (): ITheme => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleDarkMode = (): void => {\n    setDarkMode((prevMode) => !prevMode);\n  };\n\n  return { darkMode, toggleDarkMode };\n};\n\nexport default useDarkMode;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n","import React, { useContext } from 'react';\nimport { ThemeProvider as MaterialThemeProvider } from '@material-ui/core';\nimport useTheme from '../hooks/useDarkMode';\nimport { darkTheme, lightTheme } from '../theme';\n\ntype ThemeProviderProps = {\n  children?: React.ReactNode;\n};\n\nconst ThemeUpdateContext = React.createContext(() => {\n  return;\n});\n\nexport function useThemeUpdate(): VoidFunction {\n  return useContext(ThemeUpdateContext);\n}\n\nconst ThemeProvider = ({ children }: ThemeProviderProps): JSX.Element => {\n  const { darkMode, toggleDarkMode } = useTheme();\n  return (\n    <MaterialThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <ThemeUpdateContext.Provider value={toggleDarkMode}>{children}</ThemeUpdateContext.Provider>\n    </MaterialThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, PaletteType, Switch, Button } from '@material-ui/core';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport FastFoodIcon from '@material-ui/icons/Fastfood';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nexport type TopAppBarProps = {\n  loading: boolean;\n  logout: () => void;\n  toggleTheme: () => void;\n  type: PaletteType;\n  handleLogoClick: () => void;\n  handleProfileClick: () => void;\n  handleFoodClick: () => void;\n  handleIntakeClick: () => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    edge: 'start',\n    color: 'inherit',\n  },\n  title: {\n    marginRight: 20,\n  },\n  filler: {\n    flexGrow: 1,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n  switchToggle: {\n    color: 'default',\n  },\n}));\n\nconst TopAppBar = ({\n  loading,\n  logout,\n  toggleTheme,\n  type,\n  handleLogoClick,\n  handleProfileClick,\n  handleFoodClick,\n  handleIntakeClick,\n}: TopAppBarProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <IconButton className={classes.menuButton} onClick={handleLogoClick}>\n          <FastFoodIcon />\n        </IconButton>\n        <Typography className={classes.title} variant='h6'>\n          KCAL-COUNTER\n        </Typography>\n        <Button variant='text' color='inherit' onClick={handleFoodClick}>\n          Food\n        </Button>\n        <Button variant='text' color='inherit' onClick={handleIntakeClick}>\n          Intake\n        </Button>\n        <div className={classes.filler} />\n        <Switch className={classes.switchToggle} checked={type === 'light'} onChange={toggleTheme} />\n        <IconButton className={classes.menuButton} onClick={handleProfileClick}>\n          <AccountCircleIcon className={classes.icon} />\n        </IconButton>\n        <LoadingButton loading={loading} variant='outlined' color='inherit' onClick={logout}>\n          Logout\n        </LoadingButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopAppBar;\n","import React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useThemeUpdate } from '../../../contexts/ThemeContext';\nimport { useTheme } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport TopAppBar from '../TopAppBar/TopAppBar';\n\nconst Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const { logout, loading } = useAuth();\n  const toggleTheme = useThemeUpdate();\n  const {\n    palette: { type },\n  } = useTheme();\n\n  const handleLogoClick = (): void => {\n    history.push('/');\n  };\n\n  const handleProfileClick = (): void => {\n    history.push('/profile');\n  };\n\n  const handleFoodClick = (): void => {\n    history.push('/food');\n  };\n\n  const handleIntakeClick = (): void => {\n    history.push('/intake');\n  };\n\n  // All functions need to come as props so we can setup storybook without crashing everything\n  return (\n    <TopAppBar\n      loading={loading}\n      logout={logout}\n      handleLogoClick={handleLogoClick}\n      handleProfileClick={handleProfileClick}\n      handleFoodClick={handleFoodClick}\n      handleIntakeClick={handleIntakeClick}\n      toggleTheme={toggleTheme}\n      type={type}\n    />\n  );\n};\n\nexport default Navbar;\n","export type FoodType = 'NOT_SPECIFIED' | 'VEGETABLES' | 'FRUITS' | 'NUTS' | 'MEATS' | 'SWEETS' | 'PASTRY' | 'FISH' | 'CARBS';\nexport const foodTypes = ['NOT_SPECIFIED', 'VEGETABLES', 'FRUITS', 'NUTS', 'MEATS', 'SWEETS', 'PASTRY', 'FISH', 'CARBS'];\n\nexport type Food = {\n  id: string;\n  name: string;\n  kcal: number;\n  owner: string | null;\n  foodType?: FoodType;\n};\n\nexport type IntakeFood = Food & {\n  foodId: string;\n};\n","import React from 'react';\nimport { FoodType } from '../../../types';\nimport { GiMeat, GiPeanut, GiDoubleFish, GiShinyApple, GiCarrot, GiCakeSlice, GiWrappedSweet, GiSlicedBread } from 'react-icons/gi';\nimport { GrChrome } from 'react-icons/gr';\n\nexport type FoodIconProps = {\n  foodType: FoodType | undefined;\n};\n\nconst FoodIcon = ({ foodType }: FoodIconProps): JSX.Element => {\n  switch (foodType) {\n    case 'MEATS':\n      return <GiMeat />;\n    case 'FRUITS':\n      return <GiShinyApple />;\n    case 'VEGETABLES':\n      return <GiCarrot />;\n    case 'FISH':\n      return <GiDoubleFish />;\n    case 'NUTS':\n      return <GiPeanut />;\n    case 'PASTRY':\n      return <GiCakeSlice />;\n    case 'SWEETS':\n      return <GiWrappedSweet />;\n    case 'CARBS':\n      return <GiSlicedBread />;\n    default:\n      return <GrChrome />;\n  }\n};\n\nexport default FoodIcon;\n","import { ListItemIcon, Icon } from '@material-ui/core';\nimport React from 'react';\nimport { FoodType } from '../../../types';\nimport FoodIcon from '../../atoms/FoodIcon/FoodIcon';\n\nexport type ListItemFoodIconProps = {\n  foodType: FoodType | undefined;\n};\n\nconst ListItemFoodIcon = ({ foodType }: ListItemFoodIconProps): JSX.Element => {\n  return (\n    <ListItemIcon>\n      <Icon fontSize='large' color='primary'>\n        <FoodIcon foodType={foodType} />\n      </Icon>\n    </ListItemIcon>\n  );\n};\n\nexport default ListItemFoodIcon;\n","import React from 'react';\nimport { createStyles, ListItem, ListItemSecondaryAction, ListItemText, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { Food } from '../../../types';\nimport ListItemFoodIcon from '../ListItemFoodIcon/ListItemFoodIcon';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItem: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    kcal: {\n      margin: theme.spacing(4, 0, 2),\n    },\n  }),\n);\n\nexport type ListItemFoodProps = {\n  food: Food;\n};\n\nconst ListItemFood = ({ food }: ListItemFoodProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <ListItem className={classes.listItem}>\n      <ListItemFoodIcon foodType={food.foodType} />\n      <ListItemText primary={food.name} secondary={food.foodType} />\n      <ListItemSecondaryAction>\n        <Typography variant='h6'>{`${food.kcal} kcal`}</Typography>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default ListItemFood;\n","import React from 'react';\nimport { Food } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List } from '@material-ui/core';\n\nexport type ListFoodProps = {\n  foodArray: Food[];\n};\n\nconst ListFood = ({ foodArray }: ListFoodProps): JSX.Element => {\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <ListItemFood food={food} />\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListFood;\n","import React from 'react';\nimport { Food } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List, Checkbox, makeStyles } from '@material-ui/core';\n\nexport type ListFoodWithCheckboxProps = {\n  foodArray: Food[];\n  checked: string[];\n  setChecked: React.Dispatch<React.SetStateAction<string[]>>;\n  single?: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  listItemWrapper: {\n    display: 'flex',\n    width: '100%',\n  },\n  listItem: {\n    flex: 1,\n  },\n}));\n\nconst ListFoodWithCheckbox = ({ foodArray, checked, setChecked, single }: ListFoodWithCheckboxProps): JSX.Element => {\n  const classes = useStyles();\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>, c: boolean, id: string): void {\n    if (single) {\n      if (c) {\n        setChecked([id]);\n      } else {\n        setChecked([]);\n      }\n    } else {\n      if (c) {\n        setChecked((prevState) => [...prevState, id]);\n      } else {\n        setChecked((prevState) => prevState.filter((item) => item !== id));\n      }\n    }\n  }\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <div className={classes.listItemWrapper}>\n            <Checkbox checked={checked.includes(food.id)} onChange={(e, c) => handleChange(e, c, food.id)} />\n            <div className={classes.listItem}>\n              <ListItemFood food={food} />\n            </div>\n          </div>\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListFoodWithCheckbox;\n","import { Box, MenuItem, Button, Select } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFood } from '../../../contexts/FoodContext';\nimport { Food, FoodType, foodTypes } from '../../../types';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport { FoodSchema } from '../../pages/FoodPage/FoodPage';\n\ntype EditFoodProps = {\n  food: Food;\n  handleEditToggle: () => void;\n};\n\nconst EditFood = ({ food, handleEditToggle }: EditFoodProps): JSX.Element => {\n  const { currentUser } = useAuth();\n  const { loading, editPersonalFood } = useFood();\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: food.name,\n          kcal: food.kcal,\n          foodType: food.foodType !== undefined ? (food.foodType as string) : 'NOT_SPECIFIED',\n        }}\n        validationSchema={FoodSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          editPersonalFood({ ...food, name: values.name, kcal: values.kcal, foodType: values.foodType as FoodType }, currentUser);\n          handleEditToggle();\n        }}\n      >\n        {({ submitForm, isSubmitting, errors, values, setFieldValue }) => (\n          <Form>\n            <Box margin={1}>\n              <Field name='name' type='text' label='Name' component={TextField} />\n            </Box>\n            <Box margin={1}>\n              <Field name='kcal' type='number' label='Kcal' component={TextField} />\n            </Box>\n            <Box margin={1}>\n              <Select value={values.foodType} onChange={(e) => setFieldValue('foodType', e.target.value)}>\n                {foodTypes.map((foodType) => (\n                  <MenuItem key={foodType} value={foodType}>\n                    {foodType}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Box>\n            <Box margin={1}>\n              <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n                Save\n              </LoadingButton>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditFood;\n","import { Box, Button, Select, MenuItem } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useFood } from '../../../contexts/FoodContext';\nimport { Food, foodTypes } from '../../../types';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport ListFood from '../../organisms/ListFood/ListFood';\nimport * as Yup from 'yup';\nimport { TextField } from 'formik-material-ui';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport ListFoodWithCheckbox from '../../organisms/ListFoodWIthCheckbox/ListFoodWithCheckbox';\nimport EditFood from '../../organisms/EditFood/EditFood';\n\nexport const FoodSchema = Yup.object().shape({\n  name: Yup.string().required(),\n  kcal: Yup.number().positive().required(),\n  foodType: Yup.string().optional(),\n});\n\nconst FoodPage = (): JSX.Element => {\n  const { publicFood, personalFood, createPersonalFood, loading, removePersonalFood, getFoodById } = useFood();\n  const [create, setCreate] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [editFood, setEditFood] = useState(false);\n  const { currentUser } = useAuth();\n  const [checked, setChecked] = useState<string[]>([]);\n  const [currentFood, setCurrentFood] = useState<Food | null>(null);\n\n  function handleEditToggle(): void {\n    if (currentFood !== null) {\n      setEditFood((prevState) => !prevState);\n    }\n  }\n\n  useEffect(() => {\n    if (checked.length === 1) {\n      setCurrentFood(getFoodById(checked[0]));\n    }\n  }, [checked]);\n\n  return (\n    <>\n      {!edit && (\n        <div>\n          <ListFood foodArray={publicFood.concat(personalFood)} />\n          <Button variant='contained' color='primary' onClick={() => setEdit(true)}>\n            Edit personal food\n          </Button>\n        </div>\n      )}\n\n      {edit && (\n        <div>\n          {!create && !editFood && (\n            <>\n              <ListFoodWithCheckbox checked={checked} setChecked={setChecked} foodArray={personalFood} single />\n              <Button variant='contained' color='primary' onClick={() => setCreate(true)}>\n                Create new food\n              </Button>\n              <Button variant='contained' color='primary' onClick={handleEditToggle}>\n                Edit selected\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={() => {\n                  if (checked.length === 1) removePersonalFood(checked[0], currentUser);\n                }}\n              >\n                Remove selected\n              </Button>\n              <Button variant='contained' color='primary' onClick={() => setEdit(false)}>\n                Back to food\n              </Button>\n            </>\n          )}\n          {!create && checked.length === 1 && editFood && currentFood !== null && (\n            <EditFood food={currentFood} handleEditToggle={handleEditToggle} />\n          )}\n          {create && (\n            <div>\n              <Formik\n                initialValues={{\n                  name: '',\n                  kcal: 0,\n                  foodType: 'NOT_SPECIFIED',\n                }}\n                validationSchema={FoodSchema}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  createPersonalFood(values, currentUser);\n                  resetForm();\n                  setSubmitting(false);\n                }}\n              >\n                {({ submitForm, isSubmitting, errors, values, setFieldValue }) => (\n                  <Form>\n                    <Box margin={1}>\n                      <Field name='name' type='text' label='Name' component={TextField} />\n                    </Box>\n                    <Box margin={1}>\n                      <Field name='kcal' type='number' label='Kcal' component={TextField} />\n                    </Box>\n                    <Box margin={1}>\n                      <Select value={values.foodType} onChange={(e) => setFieldValue('foodType', e.target.value)}>\n                        {foodTypes.map((foodType) => (\n                          <MenuItem key={foodType} value={foodType}>\n                            {foodType}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </Box>\n                    <Box margin={1}>\n                      <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n                        Create food\n                      </LoadingButton>\n                    </Box>\n                    <Box margin={1}>\n                      <Button variant='contained' color='primary' onClick={() => setCreate(false)}>\n                        Back to food\n                      </Button>\n                    </Box>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FoodPage;\n","import React from 'react';\nimport { RotateLoader } from 'react-spinners';\n\n// TODO: Spremeni v Material UI Classes\nconst LoadingAnimation = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <RotateLoader loading={true} />\n    </div>\n  );\n};\n\nexport default LoadingAnimation;\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router';\n\nconst Error404 = (): JSX.Element => {\n  const history = useHistory();\n  return (\n    <div>\n      <h1>Error 404</h1>\n      <h6>Page does not exist!</h6>\n      <Button variant='contained' color='primary' onClick={() => history.push('/')}>\n        Go to login\n      </Button>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React from 'react';\nimport { IntakeFood } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List } from '@material-ui/core';\n\nexport type ListIntakeProps = {\n  foodArray: IntakeFood[];\n};\n\nconst ListIntake = ({ foodArray }: ListIntakeProps): JSX.Element => {\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <ListItemFood food={food} />\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListIntake;\n","import React, { useState, useEffect } from 'react';\nimport { format, parse } from 'date-fns';\nimport { Button, Input } from '@material-ui/core';\nimport ListIntake from '../../organisms/ListIntake/ListIntake';\nimport { IntakeFood } from '../../../types';\nimport { useFood } from '../../../contexts/FoodContext';\nimport ListFoodWithCheckbox from '../../organisms/ListFoodWIthCheckbox/ListFoodWithCheckbox';\nimport { useApiState } from '../../../hooks/useApiState';\nimport { API_ADDRESS } from '../../../config';\nimport axios from 'axios';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst Intake = (): JSX.Element => {\n  function formatDate(dateString: string): string {\n    return format(parse(dateString, 'yyyy-MM-dd', new Date()), 'd/M/yyyy');\n  }\n\n  const [intake, setIntake] = useState<IntakeFood[]>([]);\n  const [totalKcal, setTotalKcal] = useState<number>(0);\n  const [date, setDate] = useState<string>(format(Date.now(), 'yyyy-MM-dd'));\n  const { loading, error, setLoading, setError } = useApiState();\n  const [addFood, setAddFood] = useState(false);\n  const { currentUser } = useAuth();\n  const { publicFood, personalFood, getFoodById } = useFood();\n  const [checked, setChecked] = useState<string[]>([]);\n\n  function getIntake(): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/intake/${formatDate(date)}`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setIntake(res.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function calcTotal(): void {\n    let counter = 0;\n    intake.forEach((intakeEle) => {\n      counter += intakeEle.kcal;\n    });\n\n    setTotalKcal(counter);\n  }\n\n  function addChecked(): void {\n    for (let i = 0; i < checked.length; i++) {\n      const foundFood = getFoodById(checked[i]);\n      if (foundFood !== null) {\n        axios({\n          method: 'post',\n          url: `${API_ADDRESS}/intake/${formatDate(date)}/${foundFood.id}`,\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        })\n          .then((res) => {\n            const intakeFood = { ...foundFood, id: res.data.id, foodId: res.data.foodId };\n            setIntake((prevState) => [...prevState, intakeFood]);\n          })\n          .catch((err) => {\n            if (err.response) {\n              setError(err.response.data.message);\n            } else {\n              setError('Unknown error occurred');\n            }\n          })\n          .then(() => setLoading(false));\n      }\n    }\n    setAddFood(false);\n  }\n\n  useEffect(() => {\n    getIntake();\n  }, [date]);\n\n  useEffect(() => {\n    calcTotal();\n  }, [intake]);\n\n  return (\n    <>\n      {!addFood && (\n        <div>\n          <div>\n            <Input\n              type='date'\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            />\n            <div>Todal calories: {totalKcal}</div>\n            {intake.length === 0 && <div>No intake for this day has been found!</div>}\n            <Button variant='contained' color='primary' onClick={() => setAddFood(true)}>\n              Add food\n            </Button>\n          </div>\n          <ListIntake foodArray={intake} />\n        </div>\n      )}\n      {addFood && (\n        <div>\n          <ListFoodWithCheckbox foodArray={publicFood.concat(personalFood)} checked={checked} setChecked={setChecked} />\n          <Button variant='contained' color='primary' onClick={addChecked}>\n            Add selected\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Intake;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LandingPage from './ui/pages/LandingPage/LandingPage';\nimport Dashboard from './ui/pages/Dashboard/Dashboard';\nimport Profile from './ui/pages/Profile/Profile';\nimport PrivateRoute from './ui/PrivateRoute';\nimport Navbar from './ui/organisms/Navbar/Navbar';\nimport { useAuth } from './contexts/AuthContext';\nimport Food from './ui/pages/FoodPage/FoodPage';\nimport LoadingAnimation from './ui/atoms/LoadingAnimation/LoadingAnimation';\nimport Error404 from './ui/pages/Error404/Error404';\nimport Intake from './ui/pages/Intake/Intake';\n\nfunction App(): JSX.Element {\n  const { isAuthenticated } = useAuth();\n  if (isAuthenticated === null) return <LoadingAnimation />;\n\n  return (\n    <Switch>\n      <Route path='/' exact component={LandingPage} />\n      <PrivateRoute path='/dashboard'>\n        <Navbar />\n        <Dashboard />\n      </PrivateRoute>\n      <PrivateRoute path='/profile'>\n        <Navbar />\n        <Profile />\n      </PrivateRoute>\n      <PrivateRoute path='/food'>\n        <Navbar />\n        <Food />\n      </PrivateRoute>\n      <PrivateRoute path='/intake'>\n        <Navbar />\n        <Intake />\n      </PrivateRoute>\n      <Route path='*' component={Error404} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './contexts/ThemeContext';\nimport AuthProvider from './contexts/AuthContext';\nimport { CssBaseline } from '@material-ui/core';\nimport FoodProvider from './contexts/FoodContext';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <ThemeProvider>\n      <FoodProvider>\n        <AuthProvider>\n          <CssBaseline />\n          <App />\n        </AuthProvider>\n      </FoodProvider>\n    </ThemeProvider>\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}