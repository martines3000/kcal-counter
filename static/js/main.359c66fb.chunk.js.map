{"version":3,"sources":["config.ts","contexts/AuthContext.tsx","ui/atoms/LoadingButton/LoadingButton.tsx","ui/organisms/Login/Login.tsx","ui/organisms/Register/Register.tsx","ui/pages/LandingPage/LandingPage.tsx","ui/atoms/MacroNumbers/MacroNumbers.tsx","ui/molecules/SliderWithInput/SliderWithInput.tsx","ui/organisms/MacroCounter/MacroCounter.tsx","ui/pages/Dashboard/Dashboard.tsx","ui/pages/Profile/Profile.tsx","ui/PrivateRoute.tsx","hooks/useDarkMode.tsx","theme.tsx","contexts/ThemeContext.tsx","ui/organisms/TopAppBar/TopAppBar.tsx","ui/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_ADDRESS","initialUserInfo","username","name","id","permissions","token","AuthContext","React","createContext","isAuthenticated","currentUser","loading","error","register","login","logout","useAuth","useContext","AuthProvider","children","useState","setCurrentUser","setIsAuthenticated","setError","setLoading","useEffect","value","data","axios","method","url","then","res","catch","err","response","message","console","log","headers","Authorization","Provider","LoadingButton","rest","Button","size","color","Login","toggleAction","to","initialValues","password","onSubmit","values","setSubmitting","submitForm","isSubmitting","Box","margin","type","label","component","TextField","variant","disabled","onClick","Link","Register","firstName","lastName","email","confirmPassword","LandingPage","action","setAction","prevAction","MacroNumbers","carbs","fat","protein","Chip","useStyles","makeStyles","root","width","input","SliderWithInput","setValue","classes","className","Typography","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","_","newValue","aria-labelledby","Input","event","target","Number","onBlur","inputProps","step","min","max","MacroCounter","carbsPercent","setCarbsPercent","fatPercent","setFatPercent","proteinPercent","setProteinPercent","totalCalories","setTotalCalories","macros","setMacros","percentTotal","prevMacros","Math","round","calculateMacros","Dashboard","Profile","PrivateRoute","render","pathname","useDarkMode","darkMode","setDarkMode","toggleDarkMode","prevMode","lightTheme","createMuiTheme","palette","darkTheme","ThemeUpdateContext","ThemeProvider","useTheme","theme","menuButton","marginRight","edge","title","flexGrow","icon","height","switchToggle","TopAppBar","toggleTheme","handleLogoClick","handleProfileClick","AppBar","position","Toolbar","IconButton","Switch","checked","Navbar","history","useHistory","push","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.359c66fb.chunk.js","sourcesContent":["export const API_ADDRESS = 'http://sipv.gorecan.com:11111/api/v1';\n","import React, { useContext, useEffect, useState } from 'react';\nimport { RotateLoader } from 'react-spinners';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\n\ntype AuthProviderProps = {\n  children?: React.ReactNode;\n};\n\ninterface IRegister {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  password: string;\n}\n\ninterface ILogin {\n  username: string;\n  password: string;\n}\n\ninterface IUser {\n  username: string;\n  name: string;\n  id: string;\n  permissions: never[];\n  token: string;\n}\n\nconst initialUserInfo = {\n  username: '',\n  name: '',\n  id: '',\n  permissions: [],\n  token: '',\n};\n\ninterface IAuthContext {\n  isAuthenticated: boolean;\n  currentUser: IUser;\n  loading: boolean;\n  error: string;\n  register: (data: IRegister) => void;\n  login: (data: ILogin) => void;\n  logout: () => void;\n}\n\nconst AuthContext = React.createContext<IAuthContext>({\n  isAuthenticated: false,\n  currentUser: initialUserInfo,\n  loading: false,\n  error: '',\n  register: () => {\n    return;\n  },\n  login: () => {\n    return;\n  },\n  logout: () => {\n    return;\n  },\n});\n\nexport function useAuth(): IAuthContext {\n  return useContext(AuthContext);\n}\n\nconst AuthProvider = ({ children }: AuthProviderProps): JSX.Element => {\n  const [currentUser, setCurrentUser] = useState<IUser>(initialUserInfo);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  function register(data: IRegister): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/register`, data: data })\n      .then((res) => {\n        return;\n      })\n      .catch((err) => setError(err.response.data.message))\n      .then(() => setLoading(false));\n  }\n  function login(data: ILogin): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/authenticate`, data: data })\n      .then((res) => {\n        // TODO: FINISH\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n        //setError(err.response.data.message);\n      })\n      .then(() => {\n        setCurrentUser({\n          username: 'martines3000',\n          name: 'Martin Domajnko',\n          id: 'id123id123id123',\n          token: 'dflksmgklsdfmgkslodnmgkJWTJWT',\n          permissions: [],\n        });\n        setIsAuthenticated(true);\n        setLoading(false);\n      });\n  }\n  function logout(): void {\n    setLoading(true);\n    axios({ method: 'delete', url: `${API_ADDRESS}/session/destory`, headers: { Authorization: '' } })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => setError(err))\n      .then(() => {\n        setIsAuthenticated(false);\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    // TODO: Check if JWT still valid and set isAuthenticated to true\n  }, []);\n\n  const value = {\n    isAuthenticated: isAuthenticated,\n    currentUser: currentUser,\n    loading: loading,\n    error: error,\n    register: register,\n    login: login,\n    logout: logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport { Button, ButtonProps } from '@material-ui/core';\nimport { PulseLoader } from 'react-spinners';\n\nexport type LoadingButtonProps = ButtonProps & {\n  loading: boolean;\n};\n\nconst LoadingButton = ({ loading, ...rest }: LoadingButtonProps): JSX.Element => {\n  return <Button {...rest}>{loading ? <PulseLoader size='8px' color='white' /> : rest.children}</Button>;\n};\n\nexport default LoadingButton;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Redirect } from 'react-router';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\n\nexport type LoginProps = {\n  toggleAction: () => void;\n};\n\nconst Login = ({ toggleAction }: LoginProps): JSX.Element => {\n  const { login, loading, isAuthenticated } = useAuth();\n  if (isAuthenticated) return <Redirect to='/dashboard' />;\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        login(values);\n        setSubmitting(false);\n        // TODO: FIX -> Button doesn't get disabled\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Form>\n          <Box margin={1}>\n            <Field name='username' type='text' label='Username' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='password' type='password' label='Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n              Login\n            </LoadingButton>\n            <Link component='button' type='button' variant='body1' onClick={toggleAction}>\n              Create an account\n            </Link>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\n\nexport type RegisterProps = {\n  toggleAction: () => void;\n};\n\nconst Register = ({ toggleAction }: RegisterProps): JSX.Element => {\n  const { register, loading, error } = useAuth();\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        register({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          username: values.username,\n          email: values.email,\n          password: values.password,\n        });\n        setSubmitting(false);\n        // TODO: FIX -> Button doesn't get disabled\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Form>\n          <Box margin={1}>\n            <Field name='firstName' type='text' label='First Name' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='lastName' type='text' label='Last Name' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='username' type='text' label='Username' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='email' type='email' label='Email' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='password' type='password' label='Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='confirmPassword' type='password' label='Confirm Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n              Register\n            </LoadingButton>\n            <Link component='button' type='button' variant='body1' onClick={toggleAction}>\n              I already have an account\n            </Link>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport Login from '../../organisms/Login/Login';\nimport Register from '../../organisms/Register/Register';\n\nconst LandingPage = (): JSX.Element => {\n  const [action, setAction] = useState(false);\n\n  function toggleAction(): void {\n    setAction((prevAction) => !prevAction);\n  }\n\n  return <div>{action ? <Register toggleAction={toggleAction} /> : <Login toggleAction={toggleAction} />}</div>;\n};\n\nexport default LandingPage;\n","import { Chip } from '@material-ui/core';\nimport React from 'react';\n\nexport type MacroNumbersProps = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroNumbers = ({ carbs, fat, protein }: MacroNumbersProps): JSX.Element => {\n  return (\n    <div>\n      <Chip variant='outlined' color='primary' label={`Carbs: ${carbs}g`} />\n      <Chip variant='outlined' color='primary' label={`Fat: ${fat}g`} />\n      <Chip variant='outlined' color='primary' label={`Protein: ${protein}g`} />\n    </div>\n  );\n};\n\nexport default MacroNumbers;\n","import { Grid, Input, makeStyles, Slider, Typography } from '@material-ui/core';\nimport { VolumeUp } from '@material-ui/icons';\nimport React from 'react';\n\nexport type SliderWithInputProps = {\n  label: string;\n  value: number | number[] | string;\n  setValue: React.Dispatch<React.SetStateAction<number | number[] | string>>;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst SliderWithInput = ({ value, setValue, label }: SliderWithInputProps): JSX.Element => {\n  const classes = useStyles();\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleSliderChange = (_: unknown, newValue: number | number[]): void => {\n    setValue(newValue);\n  };\n\n  const handleBlur = (): void => {\n    if (value < 0 || value === '') {\n      setValue(0);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id='input-slider' gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems='center'>\n        <Grid item xs>\n          <Slider value={typeof value === 'number' ? value : 0} onChange={handleSliderChange} aria-labelledby='input-slider' />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin='dense'\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n          {'%'}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SliderWithInput;\n","import { Chip, Input, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport MacroNumbers from '../../atoms/MacroNumbers/MacroNumbers';\nimport SliderWithInput from '../../molecules/SliderWithInput/SliderWithInput';\n\n// export type MacroCouterProps = {};\ntype Macros = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroCounter = (): JSX.Element => {\n  const [carbsPercent, setCarbsPercent] = useState<number | number[] | string>(50);\n  const [fatPercent, setFatPercent] = useState<number | number[] | string>(15);\n  const [proteinPercent, setProteinPercent] = useState<number | number[] | string>(35);\n  const [totalCalories, setTotalCalories] = useState<number | string>(2000);\n  const [error, setError] = useState(false);\n\n  const [macros, setMacros] = useState<Macros>({ carbs: 0, fat: 0, protein: 0 });\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTotalCalories(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = (): void => {\n    if (totalCalories < 0 || totalCalories === '') {\n      setTotalCalories(0);\n    }\n  };\n\n  const calculateMacros = (): void => {\n    if (typeof totalCalories === 'number') {\n      let percentTotal = 0;\n      if (typeof carbsPercent === 'number') {\n        percentTotal += carbsPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, carbs: Math.round((totalCalories / 400) * carbsPercent) }));\n      }\n      if (typeof fatPercent === 'number') {\n        percentTotal += fatPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, fat: Math.round((totalCalories / 900) * fatPercent) }));\n      }\n      if (typeof proteinPercent === 'number') {\n        percentTotal += proteinPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, protein: Math.round((totalCalories / 400) * proteinPercent) }));\n      }\n      if (percentTotal > 100) setError(true);\n      else setError(false);\n    }\n  };\n\n  useEffect(() => {\n    calculateMacros();\n  }, [carbsPercent, fatPercent, proteinPercent, totalCalories]);\n\n  return (\n    <div>\n      <Typography id='total-calories' gutterBottom>\n        Total calories\n      </Typography>\n      <Input aria-labelledby='total-calories' value={totalCalories} onChange={handleInputChange} onBlur={handleBlur} />\n      <SliderWithInput label='Carbohydrates' value={carbsPercent} setValue={setCarbsPercent} />\n      <SliderWithInput label='Protein' value={proteinPercent} setValue={setProteinPercent} />\n      <SliderWithInput label='Fat' value={fatPercent} setValue={setFatPercent} />\n      <MacroNumbers {...macros} />\n      {error && <div>The percentage total is more than 100%</div>}\n    </div>\n  );\n};\n\nexport default MacroCounter;\n","import React from 'react';\nimport MacroCounter from '../../organisms/MacroCounter/MacroCounter';\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <div>\n      <h1>Dashboard page</h1>\n      <MacroCounter />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst Profile = (): JSX.Element => {\n  const { currentUser } = useAuth();\n  return (\n    <div>\n      <h1>Profile page</h1>\n      <div>{currentUser.id}</div>\n      <div>{currentUser.name}</div>\n      <div>{currentUser.username}</div>\n      <div>{currentUser.token}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst PrivateRoute = ({ children, ...rest }: RouteProps): JSX.Element => {\n  const { isAuthenticated } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return isAuthenticated === true ? children : <Redirect to={{ pathname: '/' }} />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\n\ninterface ITheme {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst useDarkMode = (): ITheme => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleDarkMode = (): void => {\n    setDarkMode((prevMode) => !prevMode);\n  };\n\n  return { darkMode, toggleDarkMode };\n};\n\nexport default useDarkMode;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n","import React, { useContext } from 'react';\nimport { ThemeProvider as MaterialThemeProvider } from '@material-ui/core';\nimport useTheme from '../hooks/useDarkMode';\nimport { darkTheme, lightTheme } from '../theme';\n\ntype ThemeProviderProps = {\n  children?: React.ReactNode;\n};\n\nconst ThemeUpdateContext = React.createContext(() => {\n  return;\n});\n\nexport function useThemeUpdate(): VoidFunction {\n  return useContext(ThemeUpdateContext);\n}\n\nconst ThemeProvider = ({ children }: ThemeProviderProps): JSX.Element => {\n  const { darkMode, toggleDarkMode } = useTheme();\n  return (\n    <MaterialThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <ThemeUpdateContext.Provider value={toggleDarkMode}>{children}</ThemeUpdateContext.Provider>\n    </MaterialThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, PaletteType, Switch } from '@material-ui/core';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport FastFoodIcon from '@material-ui/icons/Fastfood';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nexport type TopAppBarProps = {\n  loading: boolean;\n  logout: () => void;\n  toggleTheme: () => void;\n  type: PaletteType;\n  handleLogoClick: () => void;\n  handleProfileClick: () => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    edge: 'start',\n    color: 'inherit',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n  switchToggle: {\n    color: 'default',\n  },\n}));\n\nconst TopAppBar = ({ loading, logout, toggleTheme, type, handleLogoClick, handleProfileClick }: TopAppBarProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <IconButton className={classes.menuButton} onClick={handleLogoClick}>\n          <FastFoodIcon />\n        </IconButton>\n        <Typography className={classes.title} variant='h6'>\n          KCAL-COUNTER\n        </Typography>\n        <Switch className={classes.switchToggle} checked={type === 'light'} onChange={toggleTheme} />\n        <IconButton className={classes.menuButton} onClick={handleProfileClick}>\n          <AccountCircleIcon className={classes.icon} />\n        </IconButton>\n        <LoadingButton loading={loading} variant='outlined' color='inherit' onClick={logout}>\n          Logout\n        </LoadingButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopAppBar;\n","import React from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useThemeUpdate } from '../contexts/ThemeContext';\nimport { useTheme } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport TopAppBar from './organisms/TopAppBar/TopAppBar';\n\nconst Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const { logout, loading } = useAuth();\n  const toggleTheme = useThemeUpdate();\n  const {\n    palette: { type },\n  } = useTheme();\n\n  const handleLogoClick = (): void => {\n    history.push('/');\n  };\n\n  const handleProfileClick = (): void => {\n    history.push('/profile');\n  };\n\n  // All functions need to come as props so we can setup storybook without crashing everything\n  return (\n    <TopAppBar\n      loading={loading}\n      logout={logout}\n      handleLogoClick={handleLogoClick}\n      handleProfileClick={handleProfileClick}\n      toggleTheme={toggleTheme}\n      type={type}\n    />\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LandingPage from './ui/pages/LandingPage/LandingPage';\nimport Dashboard from './ui/pages/Dashboard/Dashboard';\nimport Profile from './ui/pages/Profile/Profile';\nimport PrivateRoute from './ui/PrivateRoute';\nimport Navbar from './ui/Navbar';\n\nfunction App(): JSX.Element {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' exact component={LandingPage} />\n        <PrivateRoute path='/dashboard'>\n          <Navbar />\n          <Dashboard />\n        </PrivateRoute>\n        <PrivateRoute path='/profile'>\n          <Navbar />\n          <Profile />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './contexts/ThemeContext';\nimport AuthProvider from './contexts/AuthContext';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <ThemeProvider>\n    <AuthProvider>\n      <CssBaseline />\n      <App />\n    </AuthProvider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}