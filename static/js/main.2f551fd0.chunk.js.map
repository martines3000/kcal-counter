{"version":3,"sources":["config.ts","contexts/PublicFoodContext.tsx","hooks/useApiState.tsx","contexts/AuthContext.tsx","ui/atoms/LoadingButton/LoadingButton.tsx","ui/organisms/Login/Login.tsx","ui/organisms/Register/Register.tsx","ui/pages/LandingPage/LandingPage.tsx","ui/atoms/MacroNumbers/MacroNumbers.tsx","ui/molecules/SliderWithInput/SliderWithInput.tsx","ui/organisms/MacroCounter/MacroCounter.tsx","ui/pages/Dashboard/Dashboard.tsx","ui/pages/Profile/Profile.tsx","ui/PrivateRoute.tsx","hooks/useDarkMode.tsx","theme.tsx","contexts/ThemeContext.tsx","ui/organisms/TopAppBar/TopAppBar.tsx","ui/organisms/Navbar/Navbar.tsx","ui/atoms/FoodIcon/FoodIcon.tsx","ui/molecules/ListItemFoodIcon/ListItemFoodIcon.tsx","ui/molecules/ListItemFood/ListItemFood.tsx","ui/organisms/ListFood/ListFood.tsx","ui/pages/Food/Food.tsx","ui/atoms/LoadingAnimation/LoadingAnimation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_ADDRESS","PublicFoodContext","React","createContext","publicFood","loadFood","usePublicFood","useContext","PublicFoodProvider","children","useState","setPublicFood","loading","setLoading","error","setError","useApiState","value","currentUser","axios","method","url","headers","Authorization","token","then","res","data","console","log","catch","err","message","Provider","initialUserInfo","username","name","id","permissions","AuthContext","isAuthenticated","register","login","logout","useAuth","AuthProvider","setCurrentUser","setIsAuthenticated","gotValidToken","localStorage","getItem","Date","getTime","parseInt","jwt_decode","exp","checkIfTokenValid","firstName","lastName","profile","useEffect","response","setItem","removeItem","LoadingButton","rest","Button","size","color","LoginSchema","Yup","shape","required","password","Login","toggleAction","to","initialValues","validationSchema","onSubmit","values","setSubmitting","submitForm","isSubmitting","errors","Box","margin","type","label","component","TextField","variant","disabled","onClick","Link","RegisterSchema","min","max","email","confirmPassword","oneOf","Register","LandingPage","action","setAction","prevAction","MacroNumbers","carbs","fat","protein","Chip","useStyles","makeStyles","root","width","input","SliderWithInput","setValue","classes","className","Typography","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","_","newValue","aria-labelledby","Input","event","target","Number","onBlur","inputProps","step","MacroCounter","carbsPercent","setCarbsPercent","fatPercent","setFatPercent","proteinPercent","setProteinPercent","totalCalories","setTotalCalories","macros","setMacros","percentTotal","prevMacros","Math","round","calculateMacros","Dashboard","Profile","PrivateRoute","render","pathname","useDarkMode","darkMode","setDarkMode","toggleDarkMode","prevMode","lightTheme","createMuiTheme","palette","darkTheme","ThemeUpdateContext","ThemeProvider","useTheme","theme","menuButton","marginRight","edge","title","filler","flexGrow","icon","height","switchToggle","TopAppBar","toggleTheme","handleLogoClick","handleProfileClick","handleFoodClick","AppBar","position","Toolbar","IconButton","Switch","checked","Navbar","history","useHistory","push","FoodIcon","foodType","ListItemFoodIcon","ListItemIcon","Icon","fontSize","createStyles","listItem","backgroundColor","background","paper","kcal","ListItemFood","food","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","ListFood","foodArray","List","map","index","length","Divider","Food","LoadingAnimation","style","minHeight","display","justifyContent","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.2f551fd0.chunk.js","sourcesContent":["export const API_ADDRESS = 'http://sipv.gorecan.com:11111/api/v1';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { RotateLoader } from 'react-spinners';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\nimport { Food } from '../types';\nimport { useApiState } from '../hooks/useApiState';\nimport { IUser } from './AuthContext';\n\ntype PublicFoodProviderProps = {\n  children?: React.ReactNode;\n};\n\ntype IPublicFoodContext = {\n  publicFood: Food[];\n  loadFood: (data: IUser) => void;\n};\n\nconst PublicFoodContext = React.createContext<IPublicFoodContext>({\n  publicFood: [],\n  loadFood: () => {\n    return;\n  },\n});\n\nexport function usePublicFood(): IPublicFoodContext {\n  return useContext(PublicFoodContext);\n}\n\nconst PublicFoodProvider = ({ children }: PublicFoodProviderProps): JSX.Element => {\n  const [publicFood, setPublicFood] = useState<Food[]>([]);\n  const { loading, error, setLoading, setError } = useApiState();\n\n  function loadFood(currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/foods/public`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPublicFood(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => setError(err.message))\n      .then(() => setLoading(false));\n  }\n\n  const value = {\n    publicFood: publicFood,\n    loadFood: loadFood,\n  };\n\n  return <PublicFoodContext.Provider value={value}>{children}</PublicFoodContext.Provider>;\n};\n\nexport default PublicFoodProvider;\n","import { useState } from 'react';\n\ninterface IApiState {\n  loading: boolean;\n  error?: string;\n  setLoading: (value: boolean) => void;\n  setError: (error: string) => void;\n}\n\nexport function useApiState(): IApiState {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n\n  return { loading, error, setLoading, setError };\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { usePublicFood } from './PublicFoodContext';\n\ntype AuthProviderProps = {\n  children?: React.ReactNode;\n};\n\ntype IRegister = {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  password: string;\n};\n\ntype ILogin = {\n  username: string;\n  password: string;\n};\n\ntype Permission = 'PROFILE_PERMISSION' | 'PERSONAL_FOODS_PERMISSION';\n\nexport type IUser = {\n  username: string;\n  name: string;\n  id: string;\n  permissions: Permission[];\n  token: string;\n};\n\nconst initialUserInfo = {\n  username: '',\n  name: '',\n  id: '',\n  permissions: [],\n  token: '',\n};\n\ntype IAuthContext = {\n  isAuthenticated: boolean | null;\n  currentUser: IUser;\n  loading: boolean;\n  error: string;\n  register: (data: IRegister) => void;\n  login: (data: ILogin) => void;\n  logout: () => void;\n};\n\nconst AuthContext = React.createContext<IAuthContext>({\n  isAuthenticated: null,\n  currentUser: initialUserInfo,\n  loading: false,\n  error: '',\n  register: () => {\n    return;\n  },\n  login: () => {\n    return;\n  },\n  logout: () => {\n    return;\n  },\n});\n\nexport function useAuth(): IAuthContext {\n  return useContext(AuthContext);\n}\n\nconst AuthProvider = ({ children }: AuthProviderProps): JSX.Element => {\n  const [currentUser, setCurrentUser] = useState<IUser>(initialUserInfo);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { loadFood } = usePublicFood();\n\n  function register(data: IRegister): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/register`, data: data })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => setError(err.response.data.message))\n      .then(() => setLoading(false));\n  }\n  function login(data: ILogin): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/authenticate`, data: data })\n      .then((res) => {\n        const { id, name, permissions, token, username } = res.data;\n        console.log(token);\n        localStorage.setItem('token', token);\n        setCurrentUser({\n          id: id,\n          name: name,\n          permissions: permissions,\n          token: token,\n          username: username,\n        });\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred!');\n        }\n        setIsAuthenticated(false);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n  function logout(): void {\n    setLoading(true);\n    axios({ method: 'delete', url: `${API_ADDRESS}/session/destroy`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .catch((err) => setError(err))\n      .then(() => {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setLoading(false);\n      });\n  }\n\n  function profile(token: string): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/profile`, headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        const { firstName, lastName, id, permissions, username } = res.data;\n        setCurrentUser({\n          id: id,\n          name: firstName + ' ' + lastName,\n          username: username,\n          permissions: permissions,\n          token: token,\n        });\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        setError(err);\n        setIsAuthenticated(false);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n\n  function checkIfTokenValid(token: string): boolean {\n    if (new Date().getTime() / 1000 > parseInt(jwt_decode<{ exp: string; iat: string; id: string }>(token).exp)) return false;\n    return true;\n  }\n\n  function gotValidToken(): void {\n    const token = localStorage.getItem('token');\n    if (token && checkIfTokenValid(token)) {\n      profile(token);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }\n\n  useEffect(() => {\n    gotValidToken();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) loadFood(currentUser);\n  }, [isAuthenticated]);\n\n  const value = {\n    isAuthenticated: isAuthenticated,\n    currentUser: currentUser,\n    loading: loading,\n    error: error,\n    register: register,\n    login: login,\n    logout: logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport { Button, ButtonProps } from '@material-ui/core';\nimport { PulseLoader } from 'react-spinners';\n\nexport type LoadingButtonProps = ButtonProps & {\n  loading: boolean;\n};\n\nconst LoadingButton = ({ loading, ...rest }: LoadingButtonProps): JSX.Element => {\n  return <Button {...rest}>{loading ? <PulseLoader size='8px' color='white' /> : rest.children}</Button>;\n};\n\nexport default LoadingButton;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Redirect } from 'react-router';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport * as Yup from 'yup';\n\nexport type LoginProps = {\n  toggleAction: () => void;\n};\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nconst Login = ({ toggleAction }: LoginProps): JSX.Element => {\n  const { login, loading, isAuthenticated, error } = useAuth();\n  if (isAuthenticated) return <Redirect to='/dashboard' />;\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        login(values);\n        setSubmitting(false);\n        // TODO: FIX -> Button doesn't get disabled\n      }}\n    >\n      {({ submitForm, isSubmitting, errors }) => (\n        <Form>\n          {console.log(errors.username)}\n          <Box margin={1}>\n            <Field name='username' type='text' label='Username' component={TextField} error={errors.username} />\n          </Box>\n          <Box margin={1}>\n            <Field name='password' type='password' label='Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n              Login\n            </LoadingButton>\n            <Link component='button' type='button' variant='body1' onClick={toggleAction}>\n              Create an account\n            </Link>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Link } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport * as Yup from 'yup';\n\nexport type RegisterProps = {\n  toggleAction: () => void;\n};\n\nconst RegisterSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too short!').max(50, 'Too long!').required(),\n  lastName: Yup.string().min(2, 'Too short!').max(50, 'Too long!').required(),\n  username: Yup.string().min(5, 'Too short!').max(50, 'Too long!').required(),\n  email: Yup.string().email('Invalid email').required(),\n  password: Yup.string().min(12, 'Too short!').max(100, 'Too long!').required(),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required(),\n});\n\nconst Register = ({ toggleAction }: RegisterProps): JSX.Element => {\n  const { register, loading, error } = useAuth();\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={RegisterSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        register({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          username: values.username,\n          email: values.email,\n          password: values.password,\n        });\n        setSubmitting(false);\n        // TODO: FIX -> Button doesn't get disabled\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Form>\n          <Box margin={1}>\n            <Field name='firstName' type='text' label='First Name' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='lastName' type='text' label='Last Name' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='username' type='text' label='Username' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='email' type='email' label='Email' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='password' type='password' label='Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <Field name='confirmPassword' type='password' label='Confirm Password' component={TextField} />\n          </Box>\n          <Box margin={1}>\n            <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n              Register\n            </LoadingButton>\n            <Link component='button' type='button' variant='body1' onClick={toggleAction}>\n              I already have an account\n            </Link>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport Login from '../../organisms/Login/Login';\nimport Register from '../../organisms/Register/Register';\n\nconst LandingPage = (): JSX.Element => {\n  const [action, setAction] = useState(false);\n\n  function toggleAction(): void {\n    setAction((prevAction) => !prevAction);\n  }\n\n  return <div>{action ? <Register toggleAction={toggleAction} /> : <Login toggleAction={toggleAction} />}</div>;\n};\n\nexport default LandingPage;\n","import { Chip } from '@material-ui/core';\nimport React from 'react';\n\nexport type MacroNumbersProps = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroNumbers = ({ carbs, fat, protein }: MacroNumbersProps): JSX.Element => {\n  return (\n    <div>\n      <Chip variant='outlined' color='primary' label={`Carbs: ${carbs}g`} />\n      <Chip variant='outlined' color='primary' label={`Fat: ${fat}g`} />\n      <Chip variant='outlined' color='primary' label={`Protein: ${protein}g`} />\n    </div>\n  );\n};\n\nexport default MacroNumbers;\n","import { Grid, Input, makeStyles, Slider, Typography } from '@material-ui/core';\nimport { VolumeUp } from '@material-ui/icons';\nimport React from 'react';\n\nexport type SliderWithInputProps = {\n  label: string;\n  value: number | number[] | string;\n  setValue: React.Dispatch<React.SetStateAction<number | number[] | string>>;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst SliderWithInput = ({ value, setValue, label }: SliderWithInputProps): JSX.Element => {\n  const classes = useStyles();\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleSliderChange = (_: unknown, newValue: number | number[]): void => {\n    setValue(newValue);\n  };\n\n  const handleBlur = (): void => {\n    if (value < 0 || value === '') {\n      setValue(0);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id='input-slider' gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems='center'>\n        <Grid item xs>\n          <Slider value={typeof value === 'number' ? value : 0} onChange={handleSliderChange} aria-labelledby='input-slider' />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin='dense'\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n          {'%'}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SliderWithInput;\n","import { Chip, Input, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport MacroNumbers from '../../atoms/MacroNumbers/MacroNumbers';\nimport SliderWithInput from '../../molecules/SliderWithInput/SliderWithInput';\n\n// export type MacroCouterProps = {};\ntype Macros = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroCounter = (): JSX.Element => {\n  const [carbsPercent, setCarbsPercent] = useState<number | number[] | string>(50);\n  const [fatPercent, setFatPercent] = useState<number | number[] | string>(15);\n  const [proteinPercent, setProteinPercent] = useState<number | number[] | string>(35);\n  const [totalCalories, setTotalCalories] = useState<number | string>(2000);\n  const [error, setError] = useState(false);\n\n  const [macros, setMacros] = useState<Macros>({ carbs: 0, fat: 0, protein: 0 });\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTotalCalories(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = (): void => {\n    if (totalCalories < 0 || totalCalories === '') {\n      setTotalCalories(0);\n    }\n  };\n\n  const calculateMacros = (): void => {\n    if (typeof totalCalories === 'number') {\n      let percentTotal = 0;\n      if (typeof carbsPercent === 'number') {\n        percentTotal += carbsPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, carbs: Math.round((totalCalories / 400) * carbsPercent) }));\n      }\n      if (typeof fatPercent === 'number') {\n        percentTotal += fatPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, fat: Math.round((totalCalories / 900) * fatPercent) }));\n      }\n      if (typeof proteinPercent === 'number') {\n        percentTotal += proteinPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, protein: Math.round((totalCalories / 400) * proteinPercent) }));\n      }\n      if (percentTotal > 100) setError(true);\n      else setError(false);\n    }\n  };\n\n  useEffect(() => {\n    calculateMacros();\n  }, [carbsPercent, fatPercent, proteinPercent, totalCalories]);\n\n  return (\n    <div>\n      <Typography id='total-calories' gutterBottom>\n        Total calories\n      </Typography>\n      <Input aria-labelledby='total-calories' value={totalCalories} onChange={handleInputChange} onBlur={handleBlur} />\n      <SliderWithInput label='Carbohydrates' value={carbsPercent} setValue={setCarbsPercent} />\n      <SliderWithInput label='Protein' value={proteinPercent} setValue={setProteinPercent} />\n      <SliderWithInput label='Fat' value={fatPercent} setValue={setFatPercent} />\n      <MacroNumbers {...macros} />\n      {error && <div>The percentage total is more than 100%</div>}\n    </div>\n  );\n};\n\nexport default MacroCounter;\n","import React from 'react';\nimport MacroCounter from '../../organisms/MacroCounter/MacroCounter';\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <div>\n      <MacroCounter />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst Profile = (): JSX.Element => {\n  const { currentUser } = useAuth();\n  return (\n    <div>\n      <h1>Profile page</h1>\n      <div>{currentUser.id}</div>\n      <div>{currentUser.name}</div>\n      <div>{currentUser.username}</div>\n      <div>{currentUser.token}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst PrivateRoute = ({ children, ...rest }: RouteProps): JSX.Element => {\n  const { isAuthenticated } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return isAuthenticated ? children : <Redirect to={{ pathname: '/' }} />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\n\ninterface ITheme {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst useDarkMode = (): ITheme => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleDarkMode = (): void => {\n    setDarkMode((prevMode) => !prevMode);\n  };\n\n  return { darkMode, toggleDarkMode };\n};\n\nexport default useDarkMode;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n","import React, { useContext } from 'react';\nimport { ThemeProvider as MaterialThemeProvider } from '@material-ui/core';\nimport useTheme from '../hooks/useDarkMode';\nimport { darkTheme, lightTheme } from '../theme';\n\ntype ThemeProviderProps = {\n  children?: React.ReactNode;\n};\n\nconst ThemeUpdateContext = React.createContext(() => {\n  return;\n});\n\nexport function useThemeUpdate(): VoidFunction {\n  return useContext(ThemeUpdateContext);\n}\n\nconst ThemeProvider = ({ children }: ThemeProviderProps): JSX.Element => {\n  const { darkMode, toggleDarkMode } = useTheme();\n  return (\n    <MaterialThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <ThemeUpdateContext.Provider value={toggleDarkMode}>{children}</ThemeUpdateContext.Provider>\n    </MaterialThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, PaletteType, Switch, Button } from '@material-ui/core';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport FastFoodIcon from '@material-ui/icons/Fastfood';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nexport type TopAppBarProps = {\n  loading: boolean;\n  logout: () => void;\n  toggleTheme: () => void;\n  type: PaletteType;\n  handleLogoClick: () => void;\n  handleProfileClick: () => void;\n  handleFoodClick: () => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    edge: 'start',\n    color: 'inherit',\n  },\n  title: {\n    marginRight: 20,\n  },\n  filler: {\n    flexGrow: 1,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n  switchToggle: {\n    color: 'default',\n  },\n}));\n\nconst TopAppBar = ({\n  loading,\n  logout,\n  toggleTheme,\n  type,\n  handleLogoClick,\n  handleProfileClick,\n  handleFoodClick,\n}: TopAppBarProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <IconButton className={classes.menuButton} onClick={handleLogoClick}>\n          <FastFoodIcon />\n        </IconButton>\n        <Typography className={classes.title} variant='h6'>\n          KCAL-COUNTER\n        </Typography>\n        <Button variant='text' color='inherit' onClick={handleFoodClick}>\n          Food\n        </Button>\n        <div className={classes.filler} />\n        <Switch className={classes.switchToggle} checked={type === 'light'} onChange={toggleTheme} />\n        <IconButton className={classes.menuButton} onClick={handleProfileClick}>\n          <AccountCircleIcon className={classes.icon} />\n        </IconButton>\n        <LoadingButton loading={loading} variant='outlined' color='inherit' onClick={logout}>\n          Logout\n        </LoadingButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopAppBar;\n","import React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useThemeUpdate } from '../../../contexts/ThemeContext';\nimport { useTheme } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport TopAppBar from '../TopAppBar/TopAppBar';\n\nconst Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const { logout, loading } = useAuth();\n  const toggleTheme = useThemeUpdate();\n  const {\n    palette: { type },\n  } = useTheme();\n\n  const handleLogoClick = (): void => {\n    history.push('/');\n  };\n\n  const handleProfileClick = (): void => {\n    history.push('/profile');\n  };\n\n  const handleFoodClick = (): void => {\n    history.push('/food');\n  };\n\n  // All functions need to come as props so we can setup storybook without crashing everything\n  return (\n    <TopAppBar\n      loading={loading}\n      logout={logout}\n      handleLogoClick={handleLogoClick}\n      handleProfileClick={handleProfileClick}\n      handleFoodClick={handleFoodClick}\n      toggleTheme={toggleTheme}\n      type={type}\n    />\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { FoodType } from '../../../types';\nimport { GiMeat, GiPeanut, GiDoubleFish, GiShinyApple, GiCarrot, GiCakeSlice, GiWrappedSweet, GiSlicedBread } from 'react-icons/gi';\nimport { GrChrome } from 'react-icons/gr';\n\nexport type FoodIconProps = {\n  foodType: FoodType | undefined;\n};\n\nconst FoodIcon = ({ foodType }: FoodIconProps): JSX.Element => {\n  switch (foodType) {\n    case 'MEATS':\n      return <GiMeat />;\n    case 'FRUITS':\n      return <GiShinyApple />;\n    case 'VEGETABLES':\n      return <GiCarrot />;\n    case 'FISH':\n      return <GiDoubleFish />;\n    case 'NUTS':\n      return <GiPeanut />;\n    case 'PASTRY':\n      return <GiCakeSlice />;\n    case 'SWEETS':\n      return <GiWrappedSweet />;\n    case 'CARB':\n      return <GiSlicedBread />;\n    default:\n      return <GrChrome />;\n  }\n};\n\nexport default FoodIcon;\n","import { ListItemIcon, Icon } from '@material-ui/core';\nimport React from 'react';\nimport { FoodType } from '../../../types';\nimport FoodIcon from '../../atoms/FoodIcon/FoodIcon';\n\nexport type ListItemFoodIconProps = {\n  foodType: FoodType | undefined;\n};\n\nconst ListItemFoodIcon = ({ foodType }: ListItemFoodIconProps): JSX.Element => {\n  return (\n    <ListItemIcon>\n      <Icon fontSize='large' color='primary'>\n        <FoodIcon foodType={foodType} />\n      </Icon>\n    </ListItemIcon>\n  );\n};\n\nexport default ListItemFoodIcon;\n","import React from 'react';\nimport { createStyles, ListItem, ListItemSecondaryAction, ListItemText, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { Food } from '../../../types';\nimport ListItemFoodIcon from '../ListItemFoodIcon/ListItemFoodIcon';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItem: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    kcal: {\n      margin: theme.spacing(4, 0, 2),\n    },\n  }),\n);\n\nexport type ListItemFoodProps = {\n  food: Food;\n};\n\nconst ListItemFood = ({ food }: ListItemFoodProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <ListItem className={classes.listItem}>\n      <ListItemFoodIcon foodType={food.foodType} />\n      <ListItemText primary={food.name} secondary={food.foodType} />\n      <ListItemSecondaryAction>\n        <Typography variant='h6'>{`${food.kcal} kcal`}</Typography>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default ListItemFood;\n","import React from 'react';\nimport { Food } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List } from '@material-ui/core';\n\nexport type ListFoodProps = {\n  foodArray: Food[];\n};\n\nconst ListFood = ({ foodArray }: ListFoodProps): JSX.Element => {\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <ListItemFood food={food} />\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListFood;\n","import React, { useState } from 'react';\nimport { usePublicFood } from '../../../contexts/PublicFoodContext';\nimport ListFood from '../../organisms/ListFood/ListFood';\n\nconst Food = (): JSX.Element => {\n  const { publicFood } = usePublicFood();\n\n  return (\n    <div>\n      <ListFood foodArray={publicFood} />\n    </div>\n  );\n};\n\nexport default Food;\n","import React from 'react';\nimport { RotateLoader } from 'react-spinners';\n\n// TODO: Spremeni v Material UI Classes\nconst LoadingAnimation = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <RotateLoader loading={true} />\n    </div>\n  );\n};\n\nexport default LoadingAnimation;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LandingPage from './ui/pages/LandingPage/LandingPage';\nimport Dashboard from './ui/pages/Dashboard/Dashboard';\nimport Profile from './ui/pages/Profile/Profile';\nimport PrivateRoute from './ui/PrivateRoute';\nimport Navbar from './ui/organisms/Navbar/Navbar';\nimport { useAuth } from './contexts/AuthContext';\nimport Food from './ui/pages/Food/Food';\nimport LoadingAnimation from './ui/atoms/LoadingAnimation/LoadingAnimation';\n\nfunction App(): JSX.Element {\n  const { isAuthenticated } = useAuth();\n  if (isAuthenticated === null) return <LoadingAnimation />;\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' exact component={LandingPage} />\n        <PrivateRoute path='/dashboard'>\n          <Navbar />\n          <Dashboard />\n        </PrivateRoute>\n        <PrivateRoute path='/profile'>\n          <Navbar />\n          <Profile />\n        </PrivateRoute>\n        <PrivateRoute path='/food'>\n          <Navbar />\n          <Food />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './contexts/ThemeContext';\nimport AuthProvider from './contexts/AuthContext';\nimport { CssBaseline } from '@material-ui/core';\nimport PublicFoodProvider from './contexts/PublicFoodContext';\n\nReactDOM.render(\n  <ThemeProvider>\n    <PublicFoodProvider>\n      <AuthProvider>\n        <CssBaseline />\n        <App />\n      </AuthProvider>\n    </PublicFoodProvider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}