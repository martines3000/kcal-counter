{"version":3,"sources":["config.ts","hooks/useApiState.tsx","contexts/FoodContext.tsx","contexts/AuthContext.tsx","ui/atoms/LoadingButton/LoadingButton.tsx","ui/atoms/Copyright/Copyright.tsx","ui/organisms/Login/Login.tsx","ui/organisms/Register/Register.tsx","ui/pages/LandingPage/LandingPage.tsx","ui/pages/Dashboard/Dashboard.tsx","ui/atoms/MacroNumbers/MacroNumbers.tsx","ui/molecules/SliderWithInput/SliderWithInput.tsx","ui/organisms/MacroCounter/MacroCounter.tsx","ui/pages/Profile/Profile.tsx","ui/PrivateRoute.tsx","hooks/useDarkMode.tsx","theme.tsx","contexts/ThemeContext.tsx","ui/organisms/TopAppBar/TopAppBar.tsx","ui/organisms/Navbar/Navbar.tsx","types.ts","ui/atoms/FoodIcon/FoodIcon.tsx","ui/molecules/ListItemFoodIcon/ListItemFoodIcon.tsx","ui/molecules/ListItemFood/ListItemFood.tsx","ui/organisms/ListFood/ListFood.tsx","ui/organisms/ListFoodWIthCheckbox/ListFoodWithCheckbox.tsx","ui/organisms/EditFood/EditFood.tsx","ui/pages/FoodPage/FoodPage.tsx","ui/atoms/LoadingAnimation/LoadingAnimation.tsx","ui/pages/Error404/Error404.tsx","ui/organisms/ListIntake/ListIntake.tsx","ui/pages/Intake/Intake.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_ADDRESS","useApiState","useState","loading","setLoading","error","setError","PublicFoodContext","React","createContext","publicFood","personalFood","loadPublicFood","loadPersonalFood","createPersonalFood","removePersonalFood","editPersonalFood","getFoodById","useFood","useContext","FoodProvider","children","setPublicFood","setPersonalFood","value","currentUser","axios","method","url","headers","Authorization","token","then","res","data","console","log","catch","err","response","message","id","i","length","prevState","foodId","filter","item","Provider","initialUserInfo","username","name","permissions","AuthContext","isAuthenticated","register","login","logout","useAuth","AuthProvider","useHistory","setCurrentUser","setIsAuthenticated","gotValidToken","localStorage","getItem","Date","getTime","parseInt","jwt_decode","exp","checkIfTokenValid","firstName","lastName","clear","profile","useEffect","toggleAction","loginInfo","save","setItem","removeItem","LoadingButton","rest","Button","size","color","Copyright","Typography","variant","align","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","text","primary","grd","copyright","LoginSchema","Yup","shape","required","password","Login","classes","formikRef","useRef","rememberMe","setRememberMe","current","setFieldValue","to","innerRef","initialValues","validationSchema","onSubmit","values","setSubmitting","isSubmitting","Grid","container","component","className","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","noValidate","fullWidth","label","autoComplete","TextField","FormControlLabel","control","Checkbox","checked","onChange","e","target","disabled","Link","href","onClick","Box","mt","RegisterSchema","min","max","email","confirmPassword","oneOf","Register","submitForm","Container","maxWidth","justify","LandingPage","action","setAction","prevAction","cards","Dashboard","gutterBottom","paragraph","cardGrid","map","card","Card","CardMedia","cardMedia","title","CardContent","cardContent","CardActions","buttonPrvi","buttonDrugi","footer","MacroNumbers","carbs","fat","protein","Chip","input","SliderWithInput","setValue","Slider","_","newValue","aria-labelledby","Input","event","Number","onBlur","inputProps","step","MacroCounter","carbsPercent","setCarbsPercent","fatPercent","setFatPercent","proteinPercent","setProteinPercent","totalCalories","setTotalCalories","macros","setMacros","percentTotal","prevMacros","Math","round","calculateMacros","main","inner","Profile","PrivateRoute","render","pathname","useDarkMode","darkMode","setDarkMode","toggleDarkMode","prevMode","lightTheme","createMuiTheme","background","default","secondary","darkTheme","ThemeUpdateContext","ThemeProvider","useTheme","menuButton","marginRight","edge","filler","flexGrow","icon","switchToggle","TopAppBar","toggleTheme","handleLogoClick","handleProfileClick","handleFoodClick","handleIntakeClick","AppBar","position","Toolbar","IconButton","Switch","Navbar","history","push","foodTypes","FoodIcon","foodType","ListItemFoodIcon","ListItemIcon","Icon","fontSize","createStyles","listItem","kcal","ListItemFood","food","ListItem","ListItemText","ListItemSecondaryAction","ListFood","foodArray","List","index","Divider","listItemWrapper","flex","ListFoodWithCheckbox","setChecked","single","includes","c","handleChange","EditFood","handleEditToggle","undefined","FoodSchema","resetForm","errors","Select","MenuItem","positive","optional","FoodPage","create","setCreate","edit","setEdit","editFood","setEditFood","currentFood","setCurrentFood","concat","LoadingAnimation","style","minHeight","justifyContent","Error404","ListIntake","addFood","Intake","formatDate","dateString","format","parse","intake","setIntake","totalKcal","setTotalKcal","proteins","fats","now","date","setDate","setAddFood","foundFood","counter","forEach","intakeEle","calcTotal","macroCounter","calcMacros","intakeFood","padding","button","paddingTop","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e9e4efc.chunk.js","sourcesContent":["export const API_ADDRESS = 'https://sipv.gorecan.com:11111/api/v1';\n","import { useState } from 'react';\n\ninterface IApiState {\n  loading: boolean;\n  error?: string;\n  setLoading: (value: boolean) => void;\n  setError: (error: string) => void;\n}\n\nexport function useApiState(): IApiState {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n\n  return { loading, error, setLoading, setError };\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { RotateLoader } from 'react-spinners';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\nimport { Food, FoodType } from '../types';\nimport { useApiState } from '../hooks/useApiState';\nimport { IUser } from './AuthContext';\n\ntype CreatePersonalFood = {\n  name: string;\n  kcal: number;\n  foodType: string;\n};\n\ntype FoodProviderProps = {\n  children?: React.ReactNode;\n};\n\ntype IPublicFoodContext = {\n  publicFood: Food[];\n  personalFood: Food[];\n  loadPublicFood: (data: IUser) => void;\n  loadPersonalFood: (data: IUser) => void;\n  createPersonalFood: (data: CreatePersonalFood, userData: IUser) => void;\n  removePersonalFood: (data: string, userData: IUser) => void;\n  editPersonalFood: (data: Food, userData: IUser) => void;\n  getFoodById: (data: string) => Food | null;\n  loading: boolean;\n};\n\nconst PublicFoodContext = React.createContext<IPublicFoodContext>({\n  publicFood: [],\n  personalFood: [],\n  loadPublicFood: () => {\n    return;\n  },\n  loadPersonalFood: () => {\n    return;\n  },\n  createPersonalFood: () => {\n    return;\n  },\n  removePersonalFood: () => {\n    return;\n  },\n  editPersonalFood: () => {\n    return;\n  },\n  getFoodById: () => null,\n  loading: false,\n});\n\nexport function useFood(): IPublicFoodContext {\n  return useContext(PublicFoodContext);\n}\n\nconst FoodProvider = ({ children }: FoodProviderProps): JSX.Element => {\n  const [publicFood, setPublicFood] = useState<Food[]>([]);\n  const [personalFood, setPersonalFood] = useState<Food[]>([]);\n  const { loading, error, setLoading, setError } = useApiState();\n\n  function loadPublicFood(currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/foods/public`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPublicFood(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function loadPersonalFood(currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/foods/personal`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPersonalFood(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function getFoodById(id: string): Food | null {\n    for (let i = 0; i < publicFood.length; i++) {\n      if (publicFood[i].id == id) return publicFood[i];\n    }\n\n    for (let i = 0; i < personalFood.length; i++) {\n      if (personalFood[i].id == id) return personalFood[i];\n    }\n\n    return null;\n  }\n\n  function createPersonalFood(data: CreatePersonalFood, currentUser: IUser): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/foods/personal`, data, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPersonalFood((prevState) => [...prevState, res.data]);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function removePersonalFood(foodId: string, currentUser: IUser): void {\n    setLoading(true);\n    axios({\n      method: 'delete',\n      url: `${API_ADDRESS}/foods/personal/${foodId}`,\n      headers: { Authorization: `Bearer ${currentUser.token}` },\n    })\n      .then((res) => setPersonalFood((prevState) => prevState.filter((item) => item.id != foodId)))\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function editPersonalFood(data: Food, currentUser: IUser): void {\n    console.log(data);\n    setLoading(true);\n    axios({ method: 'put', url: `${API_ADDRESS}/foods/personal`, data, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        setPersonalFood((prevState) => [...prevState.filter((item) => item.id != data.id), data]);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  const value = {\n    publicFood: publicFood,\n    personalFood: personalFood,\n    loadPublicFood: loadPublicFood,\n    loadPersonalFood: loadPersonalFood,\n    getFoodById: getFoodById,\n    loading: loading,\n    createPersonalFood: createPersonalFood,\n    removePersonalFood: removePersonalFood,\n    editPersonalFood: editPersonalFood,\n  };\n\n  return <PublicFoodContext.Provider value={value}>{children}</PublicFoodContext.Provider>;\n};\n\nexport default FoodProvider;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { API_ADDRESS } from '../config';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { useFood } from './FoodContext';\nimport { useHistory } from 'react-router';\n\ntype AuthProviderProps = {\n  children?: React.ReactNode;\n};\n\ntype IRegister = {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  password: string;\n  toggleAction: () => void;\n};\n\ntype ILogin = {\n  loginInfo: {\n    username: string;\n    password: string;\n  };\n  save: boolean;\n};\n\ntype Permission = 'PROFILE_PERMISSION' | 'PERSONAL_FOODS_PERMISSION';\n\nexport type IUser = {\n  username: string;\n  name: string;\n  id: string;\n  permissions: Permission[];\n  token: string;\n};\n\nconst initialUserInfo = {\n  username: '',\n  name: '',\n  id: '',\n  permissions: [],\n  token: '',\n};\n\ntype IAuthContext = {\n  isAuthenticated: boolean | null;\n  currentUser: IUser;\n  loading: boolean;\n  error: string;\n  register: (data: IRegister) => void;\n  login: (data: ILogin) => void;\n  logout: () => void;\n};\n\nconst AuthContext = React.createContext<IAuthContext>({\n  isAuthenticated: null,\n  currentUser: initialUserInfo,\n  loading: false,\n  error: '',\n  register: () => {\n    return;\n  },\n  login: () => {\n    return;\n  },\n  logout: () => {\n    return;\n  },\n});\n\nexport function useAuth(): IAuthContext {\n  return useContext(AuthContext);\n}\n\nconst AuthProvider = ({ children }: AuthProviderProps): JSX.Element => {\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = useState<IUser>(initialUserInfo);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { loadPublicFood, loadPersonalFood } = useFood();\n\n  function register(data: IRegister): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/register`, data: data })\n      .then((res) => {\n        setLoading(false);\n        data.toggleAction();\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n        setLoading(false);\n      });\n  }\n  function login({ loginInfo, save }: ILogin): void {\n    setLoading(true);\n    axios({ method: 'post', url: `${API_ADDRESS}/authenticate`, data: loginInfo })\n      .then((res) => {\n        const { id, name, permissions, token, username } = res.data;\n        if (save) localStorage.setItem('username', username);\n        localStorage.setItem('token', token);\n        setCurrentUser({\n          id: id,\n          name: name,\n          permissions: permissions,\n          token: token,\n          username: username,\n        });\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred!');\n        }\n        setIsAuthenticated(false);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n  function logout(): void {\n    setLoading(true);\n    axios({ method: 'delete', url: `${API_ADDRESS}/session/destroy`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setLoading(false);\n      });\n  }\n\n  function profile(token: string): void {\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/profile`, headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        const { firstName, lastName, id, permissions, username } = res.data;\n        setCurrentUser({\n          id: id,\n          name: firstName + ' ' + lastName,\n          username: username,\n          permissions: permissions,\n          token: token,\n        });\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n        localStorage.clear();\n        setIsAuthenticated(false);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n\n  function checkIfTokenValid(token: string): boolean {\n    if (new Date().getTime() / 1000 > parseInt(jwt_decode<{ exp: string; iat: string; id: string }>(token).exp)) return false;\n    return true;\n  }\n\n  function gotValidToken(): void {\n    const token = localStorage.getItem('token');\n    if (token && checkIfTokenValid(token)) {\n      profile(token);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }\n\n  useEffect(() => {\n    gotValidToken();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadPersonalFood(currentUser);\n      loadPublicFood(currentUser);\n    }\n  }, [isAuthenticated]);\n\n  const value = {\n    isAuthenticated: isAuthenticated,\n    currentUser: currentUser,\n    loading: loading,\n    error: error,\n    register: register,\n    login: login,\n    logout: logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport { Button, ButtonProps } from '@material-ui/core';\nimport { PulseLoader } from 'react-spinners';\n\nexport type LoadingButtonProps = ButtonProps & {\n  loading: boolean;\n};\n\nconst LoadingButton = ({ loading, ...rest }: LoadingButtonProps): JSX.Element => {\n  return <Button {...rest}>{loading ? <PulseLoader size='8px' color='white' /> : rest.children}</Button>;\n};\n\nexport default LoadingButton;\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\nconst Copyright = (): JSX.Element => {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      Calorie Counter\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Grid, Link, makeStyles, Typography } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { Redirect } from 'react-router';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport * as Yup from 'yup';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Copyright from '../../atoms/Copyright/Copyright';\n\nexport type LoginProps = {\n  toggleAction: () => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/featured/?food,green)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#81c784',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: '#487e4c',\n  },\n  text: {\n    primary: '#487e4c',\n  },\n  grd: {\n    backgroundColor: '#e6ffe6',\n    margin: '0px',\n  },\n  copyright: {},\n}));\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nconst Login = ({ toggleAction }: LoginProps): JSX.Element => {\n  const classes = useStyles();\n  const { login, loading, isAuthenticated, error } = useAuth();\n  const formikRef = useRef<any>();\n  const [rememberMe, setRememberMe] = useState(false);\n\n  useEffect(() => {\n    const username = localStorage.getItem('username');\n    if (username && formikRef.current) formikRef.current.setFieldValue('username', username);\n  }, []);\n\n  if (isAuthenticated) return <Redirect to='/dashboard' />;\n\n  return (\n    <Formik\n      innerRef={formikRef}\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        login({ loginInfo: values, save: rememberMe });\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting }) => {\n        return (\n          <Grid container component='main' className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square className={classes.grd}>\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                  Sign in\n                </Typography>\n                <Form className={classes.form} noValidate>\n                  <Field\n                    variant='outlined'\n                    margin='normal'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    name='username'\n                    autoComplete='username'\n                    component={TextField}\n                  />\n                  <Field\n                    variant='outlined'\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='password'\n                    label='Password'\n                    type='password'\n                    id='password'\n                    autoComplete='current-password'\n                    component={TextField}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox color='primary' checked={rememberMe} onChange={(e) => setRememberMe(e.target.checked)} />}\n                    label='Remember me'\n                  />\n                  <LoadingButton\n                    loading={loading}\n                    type='submit'\n                    fullWidth\n                    variant='contained'\n                    color='inherit'\n                    className={classes.submit}\n                    disabled={isSubmitting}\n                  >\n                    Sign In\n                  </LoadingButton>\n                  <Grid container className={classes.text}>\n                    <Grid item xs>\n                      <Link href='#' variant='body2' color='textPrimary'>\n                        Forgot password?\n                      </Link>\n                    </Grid>\n                    <Grid item>\n                      <Link onClick={toggleAction} variant='body2' color='textPrimary'>\n                        {\"Don't have an account? Sign Up\"}\n                      </Link>\n                    </Grid>\n                  </Grid>\n                  <Box mt={5} className={classes.copyright}>\n                    <Copyright />\n                  </Box>\n                </Form>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Avatar, CssBaseline, FormControlLabel, Box, Link, Grid, Typography, makeStyles, Checkbox, Container } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport * as Yup from 'yup';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Copyright from '../../atoms/Copyright/Copyright';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: '#e6ffe6',\n    height: '100vh',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#81c784',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  text: {\n    primary: '#487e4c',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: '#487e4c',\n  },\n  copyright: {},\n}));\n\nexport type RegisterProps = {\n  toggleAction: () => void;\n};\n\nconst RegisterSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too short!').max(50, 'Too long!').required(),\n  lastName: Yup.string().min(2, 'Too short!').max(50, 'Too long!').required(),\n  username: Yup.string().min(5, 'Too short!').max(50, 'Too long!').required(),\n  email: Yup.string().email('Invalid email').required(),\n  password: Yup.string().min(12, 'Too short!').max(100, 'Too long!').required(),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required(),\n});\n\nconst Register = ({ toggleAction }: RegisterProps): JSX.Element => {\n  const { register, loading, error } = useAuth();\n  const classes = useStyles();\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={RegisterSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        register({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          username: values.username,\n          email: values.email,\n          password: values.password,\n          toggleAction: toggleAction,\n        });\n        setSubmitting(false);\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Grid container component='main' className={classes.root}>\n          <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component='h1' variant='h5'>\n                Sign up\n              </Typography>\n              <form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Field\n                      autoComplete='fname'\n                      name='firstName'\n                      variant='outlined'\n                      required\n                      fullWidth\n                      id='firstName'\n                      label='First Name'\n                      component={TextField}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Field\n                      variant='outlined'\n                      required\n                      fullWidth\n                      id='lastName'\n                      label='Last Name'\n                      name='lastName'\n                      autoComplete='lname'\n                      component={TextField}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      variant='outlined'\n                      required\n                      fullWidth\n                      id='email'\n                      label='Email Address'\n                      name='email'\n                      autoComplete='email'\n                      component={TextField}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      variant='outlined'\n                      required\n                      fullWidth\n                      name='password'\n                      label='Password'\n                      type='password'\n                      id='password'\n                      component={TextField}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      variant='outlined'\n                      required\n                      fullWidth\n                      name='confirmPassword'\n                      label='Repeat Password'\n                      type='password'\n                      id='password'\n                      component={TextField}\n                    />\n                  </Grid>\n                </Grid>\n                <LoadingButton loading={loading} type='submit' fullWidth variant='contained' color='inherit' className={classes.submit}>\n                  Sign Up\n                </LoadingButton>\n                <Grid container justify='flex-end' className={classes.text}>\n                  <Grid item>\n                    <Link onClick={toggleAction} variant='body2' color='textPrimary'>\n                      {'Already have an account? Sign in'}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n            <Box mt={5} className={classes.copyright}>\n              <Copyright />\n            </Box>\n          </Container>\n        </Grid>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport Login from '../../organisms/Login/Login';\nimport Register from '../../organisms/Register/Register';\n\nconst LandingPage = (): JSX.Element => {\n  const [action, setAction] = useState(false);\n\n  function toggleAction(): void {\n    setAction((prevAction) => !prevAction);\n  }\n\n  return <div>{action ? <Register toggleAction={toggleAction} /> : <Login toggleAction={toggleAction} />}</div>;\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport {\n  Button,\n  Typography,\n  AppBar,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CssBaseline,\n  Grid,\n  Toolbar,\n  Container,\n} from '@material-ui/core';\nimport { Fastfood } from '@material-ui/icons';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useStyles } from '../../../App';\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nconst Dashboard = (): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <main>\n        <div className={classes.container}>\n          <Container maxWidth='sm'>\n            <Typography variant='h2' align='center' color='textPrimary' gutterBottom>\n              Our Recipes\n            </Typography>\n            <Typography variant='h5' align='center' color='textSecondary' paragraph>\n              {'Pull up a chair. Take a Taste. Come join us. Life is so endlessly delicious.'}\n            </Typography>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth='md'>\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia className={classes.cardMedia} image='https://source.unsplash.com/featured/?food,eating' title='Image Title' />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant='h5'>\n                      Recipe\n                    </Typography>\n                    <Typography> Ingredients....</Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button className={classes.buttonPrvi} size='small' color='primary'>\n                      View\n                    </Button>\n                    <Button className={classes.buttonDrugi} size='small' color='secondary'>\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant='subtitle1' align='center' color='textSecondary'>\n          Copyright 2021\n        </Typography>\n      </footer>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { Chip } from '@material-ui/core';\nimport React from 'react';\n\nexport type MacroNumbersProps = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroNumbers = ({ carbs, fat, protein }: MacroNumbersProps): JSX.Element => {\n  return (\n    <div>\n      <Chip variant='outlined' color='primary' label={`Carbs: ${carbs}g`} />\n      <Chip variant='outlined' color='primary' label={`Fat: ${fat}g`} />\n      <Chip variant='outlined' color='primary' label={`Protein: ${protein}g`} />\n    </div>\n  );\n};\n\nexport default MacroNumbers;\n","import { Grid, Input, makeStyles, Slider, Typography } from '@material-ui/core';\nimport { VolumeUp } from '@material-ui/icons';\nimport React from 'react';\n\nexport type SliderWithInputProps = {\n  label: string;\n  value: number | number[] | string;\n  setValue: React.Dispatch<React.SetStateAction<number | number[] | string>>;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst SliderWithInput = ({ value, setValue, label }: SliderWithInputProps): JSX.Element => {\n  const classes = useStyles();\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleSliderChange = (_: unknown, newValue: number | number[]): void => {\n    setValue(newValue);\n  };\n\n  const handleBlur = (): void => {\n    if (value < 0 || value === '') {\n      setValue(0);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id='input-slider' gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems='center'>\n        <Grid item xs>\n          <Slider value={typeof value === 'number' ? value : 0} onChange={handleSliderChange} aria-labelledby='input-slider' />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin='dense'\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n          {'%'}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SliderWithInput;\n","import { Chip, Input, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport MacroNumbers from '../../atoms/MacroNumbers/MacroNumbers';\nimport SliderWithInput from '../../molecules/SliderWithInput/SliderWithInput';\n\n// export type MacroCouterProps = {};\ntype Macros = {\n  carbs: number;\n  fat: number;\n  protein: number;\n};\n\nconst MacroCounter = (): JSX.Element => {\n  const [carbsPercent, setCarbsPercent] = useState<number | number[] | string>(50);\n  const [fatPercent, setFatPercent] = useState<number | number[] | string>(15);\n  const [proteinPercent, setProteinPercent] = useState<number | number[] | string>(35);\n  const [totalCalories, setTotalCalories] = useState<number | string>(2000);\n  const [error, setError] = useState(false);\n\n  const [macros, setMacros] = useState<Macros>({ carbs: 0, fat: 0, protein: 0 });\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTotalCalories(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = (): void => {\n    if (totalCalories < 0 || totalCalories === '') {\n      setTotalCalories(0);\n    }\n  };\n\n  const calculateMacros = (): void => {\n    if (typeof totalCalories === 'number') {\n      let percentTotal = 0;\n      if (typeof carbsPercent === 'number') {\n        percentTotal += carbsPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, carbs: Math.round((totalCalories / 400) * carbsPercent) }));\n      }\n      if (typeof fatPercent === 'number') {\n        percentTotal += fatPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, fat: Math.round((totalCalories / 900) * fatPercent) }));\n      }\n      if (typeof proteinPercent === 'number') {\n        percentTotal += proteinPercent;\n        setMacros((prevMacros) => ({ ...prevMacros, protein: Math.round((totalCalories / 400) * proteinPercent) }));\n      }\n      if (percentTotal > 100) setError(true);\n      else setError(false);\n    }\n  };\n\n  useEffect(() => {\n    calculateMacros();\n  }, [carbsPercent, fatPercent, proteinPercent, totalCalories]);\n\n  return (\n    <div>\n      <Typography id='total-calories' gutterBottom>\n        Total calories\n      </Typography>\n      <Input aria-labelledby='total-calories' value={totalCalories} onChange={handleInputChange} onBlur={handleBlur} />\n      <SliderWithInput label='Carbohydrates' value={carbsPercent} setValue={setCarbsPercent} />\n      <SliderWithInput label='Protein' value={proteinPercent} setValue={setProteinPercent} />\n      <SliderWithInput label='Fat' value={fatPercent} setValue={setFatPercent} />\n      <MacroNumbers {...macros} />\n      {error && <div>The percentage total is more than 100%</div>}\n    </div>\n  );\n};\n\nexport default MacroCounter;\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport MacroCounter from '../../organisms/MacroCounter/MacroCounter';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    margin: theme.spacing(2, 8, 0),\n  },\n  inner: {\n    margin: theme.spacing(4, 0, 0),\n  },\n}));\n\nconst Profile = (): JSX.Element => {\n  const classes = useStyles();\n  const { currentUser } = useAuth();\n  return (\n    <div className={classes.main}>\n      <h1>Profile page</h1>\n      <div>{currentUser.name}</div>\n      <div>{currentUser.username}</div>\n      <div className={classes.inner}>\n        <MacroCounter />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst PrivateRoute = ({ children, ...rest }: RouteProps): JSX.Element => {\n  const { isAuthenticated } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return isAuthenticated ? children : <Redirect to={{ pathname: '/' }} />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\n\ninterface ITheme {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst useDarkMode = (): ITheme => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleDarkMode = (): void => {\n    setDarkMode((prevMode) => !prevMode);\n  };\n\n  return { darkMode, toggleDarkMode };\n};\n\nexport default useDarkMode;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    background: {\n      default: '#e6ffe6',\n      paper: '#f0f0f0',\n    },\n    primary: {\n      main: '#487e4c',\n    },\n    secondary: {\n      main: '#666666',\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#a1b2a1',\n      paper: '#415145',\n    },\n    primary: {\n      main: '#8fdc9e',\n    },\n    secondary: {\n      main: '#f0f0f0',\n    },\n  },\n});\n","import React, { useContext } from 'react';\nimport { ThemeProvider as MaterialThemeProvider } from '@material-ui/core';\nimport useTheme from '../hooks/useDarkMode';\nimport { darkTheme, lightTheme } from '../theme';\n\ntype ThemeProviderProps = {\n  children?: React.ReactNode;\n};\n\nconst ThemeUpdateContext = React.createContext(() => {\n  return;\n});\n\nexport function useThemeUpdate(): VoidFunction {\n  return useContext(ThemeUpdateContext);\n}\n\nconst ThemeProvider = ({ children }: ThemeProviderProps): JSX.Element => {\n  const { darkMode, toggleDarkMode } = useTheme();\n  return (\n    <MaterialThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <ThemeUpdateContext.Provider value={toggleDarkMode}>{children}</ThemeUpdateContext.Provider>\n    </MaterialThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, PaletteType, Switch, Button } from '@material-ui/core';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport FastFoodIcon from '@material-ui/icons/Fastfood';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nexport type TopAppBarProps = {\n  loading: boolean;\n  logout: () => void;\n  toggleTheme: () => void;\n  type: PaletteType;\n  handleLogoClick: () => void;\n  handleProfileClick: () => void;\n  handleFoodClick: () => void;\n  handleIntakeClick: () => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    edge: 'start',\n    color: 'inherit',\n  },\n  title: {\n    marginRight: 20,\n  },\n  filler: {\n    flexGrow: 1,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n  switchToggle: {\n    color: 'default',\n  },\n}));\n\nconst TopAppBar = ({\n  loading,\n  logout,\n  toggleTheme,\n  type,\n  handleLogoClick,\n  handleProfileClick,\n  handleFoodClick,\n  handleIntakeClick,\n}: TopAppBarProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <IconButton className={classes.menuButton} onClick={handleLogoClick}>\n          <FastFoodIcon />\n        </IconButton>\n        <Typography className={classes.title} variant='h6'>\n          KCAL-COUNTER\n        </Typography>\n        <Button variant='text' color='inherit' onClick={handleFoodClick}>\n          Food\n        </Button>\n        <Button variant='text' color='inherit' onClick={handleIntakeClick}>\n          Intake\n        </Button>\n        <div className={classes.filler} />\n        <Switch className={classes.switchToggle} checked={type === 'light'} onChange={toggleTheme} />\n        <IconButton className={classes.menuButton} onClick={handleProfileClick}>\n          <AccountCircleIcon className={classes.icon} />\n        </IconButton>\n        <LoadingButton loading={loading} variant='outlined' color='inherit' onClick={logout}>\n          Logout\n        </LoadingButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopAppBar;\n","import React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useThemeUpdate } from '../../../contexts/ThemeContext';\nimport { useTheme } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport TopAppBar from '../TopAppBar/TopAppBar';\nimport { useStyles } from '../../../App';\n\nconst Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const { logout, loading } = useAuth();\n  const toggleTheme = useThemeUpdate();\n\n  const {\n    palette: { type },\n  } = useTheme();\n\n  const handleLogoClick = (): void => {\n    history.push('/');\n  };\n\n  const handleProfileClick = (): void => {\n    history.push('/profile');\n  };\n\n  const handleFoodClick = (): void => {\n    history.push('/food');\n  };\n\n  const handleIntakeClick = (): void => {\n    history.push('/intake');\n  };\n\n  // All functions need to come as props so we can setup storybook without crashing everything\n  return (\n    <TopAppBar\n      loading={loading}\n      logout={logout}\n      handleLogoClick={handleLogoClick}\n      handleProfileClick={handleProfileClick}\n      handleFoodClick={handleFoodClick}\n      handleIntakeClick={handleIntakeClick}\n      toggleTheme={toggleTheme}\n      type={type}\n    />\n  );\n};\n\nexport default Navbar;\n","export type FoodType = 'NOT_SPECIFIED' | 'VEGETABLES' | 'FRUITS' | 'NUTS' | 'MEATS' | 'SWEETS' | 'PASTRY' | 'FISH' | 'CARBS';\nexport const foodTypes = ['NOT_SPECIFIED', 'VEGETABLES', 'FRUITS', 'NUTS', 'MEATS', 'SWEETS', 'PASTRY', 'FISH', 'CARBS'];\n\nexport type Food = {\n  id: string;\n  name: string;\n  kcal: number;\n  owner: string | null;\n  foodType?: FoodType;\n  carbs: number;\n  proteins: number;\n  fats: number;\n};\n\nexport type IntakeFood = Food & {\n  foodId: string;\n};\n","import React from 'react';\nimport { FoodType } from '../../../types';\nimport { GiMeat, GiPeanut, GiDoubleFish, GiShinyApple, GiCarrot, GiCakeSlice, GiWrappedSweet, GiSlicedBread } from 'react-icons/gi';\nimport { GrChrome } from 'react-icons/gr';\n\nexport type FoodIconProps = {\n  foodType: FoodType | undefined;\n};\n\nconst FoodIcon = ({ foodType }: FoodIconProps): JSX.Element => {\n  switch (foodType) {\n    case 'MEATS':\n      return <GiMeat />;\n    case 'FRUITS':\n      return <GiShinyApple />;\n    case 'VEGETABLES':\n      return <GiCarrot />;\n    case 'FISH':\n      return <GiDoubleFish />;\n    case 'NUTS':\n      return <GiPeanut />;\n    case 'PASTRY':\n      return <GiCakeSlice />;\n    case 'SWEETS':\n      return <GiWrappedSweet />;\n    case 'CARBS':\n      return <GiSlicedBread />;\n    default:\n      return <GrChrome />;\n  }\n};\n\nexport default FoodIcon;\n","import { ListItemIcon, Icon } from '@material-ui/core';\nimport React from 'react';\nimport { FoodType } from '../../../types';\nimport FoodIcon from '../../atoms/FoodIcon/FoodIcon';\n\nexport type ListItemFoodIconProps = {\n  foodType: FoodType | undefined;\n};\n\nconst ListItemFoodIcon = ({ foodType }: ListItemFoodIconProps): JSX.Element => {\n  return (\n    <ListItemIcon>\n      <Icon fontSize='large' color='primary'>\n        <FoodIcon foodType={foodType} />\n      </Icon>\n    </ListItemIcon>\n  );\n};\n\nexport default ListItemFoodIcon;\n","import React from 'react';\nimport { createStyles, ListItem, ListItemSecondaryAction, ListItemText, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { Food } from '../../../types';\nimport ListItemFoodIcon from '../ListItemFoodIcon/ListItemFoodIcon';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItem: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    kcal: {\n      margin: theme.spacing(4, 0, 2),\n    },\n  }),\n);\n\nexport type ListItemFoodProps = {\n  food: Food;\n};\n\nconst ListItemFood = ({ food }: ListItemFoodProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <ListItem className={classes.listItem}>\n      <ListItemFoodIcon foodType={food.foodType} />\n      <ListItemText primary={food.name} secondary={food.foodType} />\n      <ListItemSecondaryAction>\n        <Typography variant='h6'>{`${food.kcal} kcal`}</Typography>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default ListItemFood;\n","import React from 'react';\nimport { Food } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List } from '@material-ui/core';\n\nexport type ListFoodProps = {\n  foodArray: Food[];\n};\n\nconst ListFood = ({ foodArray }: ListFoodProps): JSX.Element => {\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <ListItemFood food={food} />\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListFood;\n","import React from 'react';\nimport { Food } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List, Checkbox, makeStyles } from '@material-ui/core';\n\nexport type ListFoodWithCheckboxProps = {\n  foodArray: Food[];\n  checked: string[];\n  setChecked: React.Dispatch<React.SetStateAction<string[]>>;\n  single?: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  listItemWrapper: {\n    display: 'flex',\n    width: '100%',\n  },\n  listItem: {\n    flex: 1,\n  },\n}));\n\nconst ListFoodWithCheckbox = ({ foodArray, checked, setChecked, single }: ListFoodWithCheckboxProps): JSX.Element => {\n  const classes = useStyles();\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>, c: boolean, id: string): void {\n    if (single) {\n      if (c) {\n        setChecked([id]);\n      } else {\n        setChecked([]);\n      }\n    } else {\n      if (c) {\n        setChecked((prevState) => [...prevState, id]);\n      } else {\n        setChecked((prevState) => prevState.filter((item) => item !== id));\n      }\n    }\n  }\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <div className={classes.listItemWrapper}>\n            <Checkbox checked={checked.includes(food.id)} onChange={(e, c) => handleChange(e, c, food.id)} />\n            <div className={classes.listItem}>\n              <ListItemFood food={food} />\n            </div>\n          </div>\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListFoodWithCheckbox;\n","import { Box, MenuItem, Button, Select } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport React from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFood } from '../../../contexts/FoodContext';\nimport { Food, FoodType, foodTypes } from '../../../types';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport { FoodSchema } from '../../pages/FoodPage/FoodPage';\n\ntype EditFoodProps = {\n  food: Food;\n  handleEditToggle: () => void;\n};\n\nconst EditFood = ({ food, handleEditToggle }: EditFoodProps): JSX.Element => {\n  const { currentUser } = useAuth();\n  const { loading, editPersonalFood } = useFood();\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: food.name,\n          kcal: food.kcal,\n          foodType: food.foodType !== undefined ? (food.foodType as string) : 'NOT_SPECIFIED',\n        }}\n        validationSchema={FoodSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          editPersonalFood({ ...food, name: values.name, kcal: values.kcal, foodType: values.foodType as FoodType }, currentUser);\n          handleEditToggle();\n        }}\n      >\n        {({ submitForm, isSubmitting, errors, values, setFieldValue }) => (\n          <Form>\n            <Box margin={1}>\n              <Field name='name' type='text' label='Name' component={TextField} />\n            </Box>\n            <Box margin={1}>\n              <Field name='kcal' type='number' label='Kcal' component={TextField} />\n            </Box>\n            <Box margin={1}>\n              <Select value={values.foodType} onChange={(e) => setFieldValue('foodType', e.target.value)}>\n                {foodTypes.map((foodType) => (\n                  <MenuItem key={foodType} value={foodType}>\n                    {foodType}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Box>\n            <Box margin={1}>\n              <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n                Save\n              </LoadingButton>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditFood;\n","import { Box, Button, Select, MenuItem, makeStyles } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useFood } from '../../../contexts/FoodContext';\nimport { Food, foodTypes } from '../../../types';\nimport LoadingButton from '../../atoms/LoadingButton/LoadingButton';\nimport ListFood from '../../organisms/ListFood/ListFood';\nimport * as Yup from 'yup';\nimport { TextField } from 'formik-material-ui';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport ListFoodWithCheckbox from '../../organisms/ListFoodWIthCheckbox/ListFoodWithCheckbox';\nimport EditFood from '../../organisms/EditFood/EditFood';\n\nexport const FoodSchema = Yup.object().shape({\n  name: Yup.string().required(),\n  kcal: Yup.number().positive().required(),\n  foodType: Yup.string().optional(),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    margin: theme.spacing(2, 8, 0),\n  },\n}));\n\nconst FoodPage = (): JSX.Element => {\n  const classes = useStyles();\n  const { publicFood, personalFood, createPersonalFood, loading, removePersonalFood, getFoodById } = useFood();\n  const [create, setCreate] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [editFood, setEditFood] = useState(false);\n  const { currentUser } = useAuth();\n  const [checked, setChecked] = useState<string[]>([]);\n  const [currentFood, setCurrentFood] = useState<Food | null>(null);\n\n  function handleEditToggle(): void {\n    if (currentFood !== null) {\n      setEditFood((prevState) => !prevState);\n    }\n  }\n\n  useEffect(() => {\n    if (checked.length === 1) {\n      setCurrentFood(getFoodById(checked[0]));\n    }\n  }, [checked]);\n\n  return (\n    <div className={classes.main}>\n      {!edit && (\n        <div>\n          <ListFood foodArray={publicFood.concat(personalFood)} />\n          <Button variant='contained' color='primary' onClick={() => setEdit(true)}>\n            Edit personal food\n          </Button>\n        </div>\n      )}\n\n      {edit && (\n        <div>\n          {!create && !editFood && (\n            <>\n              <ListFoodWithCheckbox checked={checked} setChecked={setChecked} foodArray={personalFood} single />\n              <Button variant='contained' color='primary' onClick={() => setCreate(true)}>\n                Create new food\n              </Button>\n              <Button variant='contained' color='primary' onClick={handleEditToggle}>\n                Edit selected\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={() => {\n                  if (checked.length === 1) removePersonalFood(checked[0], currentUser);\n                }}\n              >\n                Remove selected\n              </Button>\n              <Button variant='contained' color='primary' onClick={() => setEdit(false)}>\n                Back to food\n              </Button>\n            </>\n          )}\n          {!create && checked.length === 1 && editFood && currentFood !== null && (\n            <EditFood food={currentFood} handleEditToggle={handleEditToggle} />\n          )}\n          {create && (\n            <div>\n              <Formik\n                initialValues={{\n                  name: '',\n                  kcal: 0,\n                  foodType: 'NOT_SPECIFIED',\n                }}\n                validationSchema={FoodSchema}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  createPersonalFood(values, currentUser);\n                  resetForm();\n                  setSubmitting(false);\n                }}\n              >\n                {({ submitForm, isSubmitting, errors, values, setFieldValue }) => (\n                  <Form>\n                    <Box margin={1}>\n                      <Field name='name' type='text' label='Name' component={TextField} />\n                    </Box>\n                    <Box margin={1}>\n                      <Field name='kcal' type='number' label='Kcal' component={TextField} />\n                    </Box>\n                    <Box margin={1}>\n                      <Select value={values.foodType} onChange={(e) => setFieldValue('foodType', e.target.value)}>\n                        {foodTypes.map((foodType) => (\n                          <MenuItem key={foodType} value={foodType}>\n                            {foodType}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </Box>\n                    <Box margin={1}>\n                      <LoadingButton loading={loading} variant='contained' color='primary' disabled={isSubmitting} onClick={submitForm}>\n                        Create food\n                      </LoadingButton>\n                    </Box>\n                    <Box margin={1}>\n                      <Button variant='contained' color='primary' onClick={() => setCreate(false)}>\n                        Back to food\n                      </Button>\n                    </Box>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FoodPage;\n","import React from 'react';\nimport { RotateLoader } from 'react-spinners';\n\n// TODO: Spremeni v Material UI Classes\nconst LoadingAnimation = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <RotateLoader loading={true} />\n    </div>\n  );\n};\n\nexport default LoadingAnimation;\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router';\n\nconst Error404 = (): JSX.Element => {\n  const history = useHistory();\n  return (\n    <div>\n      <h1>Error 404</h1>\n      <h6>Page does not exist!</h6>\n      <Button variant='contained' color='primary' onClick={() => history.push('/')}>\n        Go to login\n      </Button>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React from 'react';\nimport { IntakeFood } from '../../../types';\nimport ListItemFood from '../../molecules/ListItemFood/ListItemFood';\nimport { Divider, List } from '@material-ui/core';\n\nexport type ListIntakeProps = {\n  foodArray: IntakeFood[];\n};\n\nconst ListIntake = ({ foodArray }: ListIntakeProps): JSX.Element => {\n  return (\n    <List>\n      {foodArray.map((food, index) => (\n        <div key={food.id}>\n          <ListItemFood food={food} />\n          {index !== foodArray.length - 1 ? <Divider variant='inset' /> : <></>}\n        </div>\n      ))}\n    </List>\n  );\n};\n\nexport default ListIntake;\n","import React, { useState, useEffect } from 'react';\nimport { format, parse } from 'date-fns';\nimport { Button, Input, makeStyles, Typography } from '@material-ui/core';\nimport ListIntake from '../../organisms/ListIntake/ListIntake';\nimport { IntakeFood } from '../../../types';\nimport { useFood } from '../../../contexts/FoodContext';\nimport ListFoodWithCheckbox from '../../organisms/ListFoodWIthCheckbox/ListFoodWithCheckbox';\nimport { useApiState } from '../../../hooks/useApiState';\nimport { API_ADDRESS } from '../../../config';\nimport axios from 'axios';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    margin: theme.spacing(2, 8, 0),\n  },\n  inner: {\n    margin: theme.spacing(2, 0, 2),\n  },\n  addFood: {\n    margin: theme.spacing(0, 2, 0),\n  },\n}));\n\ntype Macros = {\n  carbs: number;\n  proteins: number;\n  fats: number;\n};\n\nconst Intake = (): JSX.Element => {\n  const classes = useStyles();\n  function formatDate(dateString: string): string {\n    return format(parse(dateString, 'yyyy-MM-dd', new Date()), 'd/M/yyyy');\n  }\n\n  const [intake, setIntake] = useState<IntakeFood[]>([]);\n  const [totalKcal, setTotalKcal] = useState<number>(0);\n  const [macros, setMacros] = useState<Macros>({ carbs: 0, proteins: 0, fats: 0 });\n  const [date, setDate] = useState<string>(format(Date.now(), 'yyyy-MM-dd'));\n  const { loading, error, setLoading, setError } = useApiState();\n  const [addFood, setAddFood] = useState(false);\n  const { currentUser } = useAuth();\n  const { publicFood, personalFood, getFoodById } = useFood();\n  const [checked, setChecked] = useState<string[]>([]);\n\n  function getIntake(): void {\n    setIntake([]);\n    setLoading(true);\n    axios({ method: 'get', url: `${API_ADDRESS}/intake/${formatDate(date)}`, headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then((res) => {\n        for (let i = 0; i < res.data.length; ++i) {\n          const foundFood = getFoodById(res.data[i].foodId);\n          if (foundFood !== null) {\n            setIntake((prevState) => [...prevState, { ...foundFood, id: res.data[i].id, foodId: res.data[i].foodId }]);\n          }\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.message);\n        } else {\n          setError('Unknown error occurred');\n        }\n      })\n      .then(() => setLoading(false));\n  }\n\n  function calcTotal(): void {\n    let counter = 0;\n    intake.forEach((intakeEle) => {\n      counter += intakeEle.kcal;\n    });\n\n    setTotalKcal(counter);\n  }\n\n  function calcMacros(): void {\n    const macroCounter: Macros = { carbs: 0, proteins: 0, fats: 0 };\n\n    intake.forEach((intakeEle) => {\n      macroCounter.carbs += intakeEle.carbs;\n      macroCounter.proteins += intakeEle.proteins;\n      macroCounter.fats += intakeEle.fats;\n    });\n\n    setMacros(macroCounter);\n  }\n\n  function addChecked(): void {\n    for (let i = 0; i < checked.length; i++) {\n      const foundFood = getFoodById(checked[i]);\n      if (foundFood !== null) {\n        axios({\n          method: 'post',\n          url: `${API_ADDRESS}/intake/${formatDate(date)}/${foundFood.id}`,\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        })\n          .then((res) => {\n            const intakeFood = { ...foundFood, id: res.data.id, foodId: res.data.foodId };\n            setIntake((prevState) => [...prevState, intakeFood]);\n          })\n          .catch((err) => {\n            if (err.response) {\n              setError(err.response.data.message);\n            } else {\n              setError('Unknown error occurred');\n            }\n          })\n          .then(() => setLoading(false));\n      }\n    }\n    setAddFood(false);\n  }\n\n  useEffect(() => {\n    getIntake();\n  }, [date]);\n\n  useEffect(() => {\n    calcTotal();\n    calcMacros();\n  }, [intake]);\n\n  return (\n    <div className={classes.main}>\n      {!addFood && (\n        <div>\n          <div>\n            <Typography variant='h5'>Total calories: {totalKcal}</Typography>\n            <Typography variant='h5'>{`Carbs: ${macros.carbs} Protein: ${macros.proteins} Fat: ${macros.fats}`}</Typography>\n            <div className={classes.inner}>\n              <Input\n                type='date'\n                value={date}\n                onChange={(e) => {\n                  setDate(e.target.value);\n                }}\n              />\n              <Button variant='contained' color='primary' onClick={() => setAddFood(true)} className={classes.addFood}>\n                Add food\n              </Button>\n            </div>\n            {intake.length === 0 && <Typography variant='h5'>No intake for this day has been found!</Typography>}\n          </div>\n          <ListIntake foodArray={intake} />\n        </div>\n      )}\n      {addFood && (\n        <div>\n          <ListFoodWithCheckbox foodArray={publicFood.concat(personalFood)} checked={checked} setChecked={setChecked} />\n          <Button variant='contained' color='primary' onClick={addChecked}>\n            Add selected\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Intake;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LandingPage from './ui/pages/LandingPage/LandingPage';\nimport Dashboard from './ui/pages/Dashboard/Dashboard';\nimport Profile from './ui/pages/Profile/Profile';\nimport PrivateRoute from './ui/PrivateRoute';\nimport Navbar from './ui/organisms/Navbar/Navbar';\nimport { useAuth } from './contexts/AuthContext';\nimport Food from './ui/pages/FoodPage/FoodPage';\nimport LoadingAnimation from './ui/atoms/LoadingAnimation/LoadingAnimation';\nimport Error404 from './ui/pages/Error404/Error404';\nimport Intake from './ui/pages/Intake/Intake';\nimport { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  button: {\n    marginTop: '40px',\n  },\n  cardGrid: {\n    padding: '20px 0',\n  },\n  main: {},\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    padding: '50px 0',\n  },\n  buttonPrvi: {},\n  buttonDrugi: {},\n}));\n\nfunction App(): JSX.Element {\n  const { isAuthenticated } = useAuth();\n  if (isAuthenticated === null) return <LoadingAnimation />;\n\n  return (\n    <Switch>\n      <Route exact path='/' component={LandingPage} />\n      <PrivateRoute path='/dashboard'>\n        <Navbar />\n        <Dashboard />\n      </PrivateRoute>\n      <PrivateRoute path='/profile'>\n        <Navbar />\n        <Profile />\n      </PrivateRoute>\n      <PrivateRoute path='/food'>\n        <Navbar />\n        <Food />\n      </PrivateRoute>\n      <PrivateRoute path='/intake'>\n        <Navbar />\n        <Intake />\n      </PrivateRoute>\n      <Route path='*' component={Error404} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from './contexts/ThemeContext';\nimport AuthProvider from './contexts/AuthContext';\nimport { CssBaseline } from '@material-ui/core';\nimport FoodProvider from './contexts/FoodContext';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider>\n      <FoodProvider>\n        <AuthProvider>\n          <CssBaseline />\n          <App />\n        </AuthProvider>\n      </FoodProvider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}